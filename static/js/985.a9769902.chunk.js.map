{"version":3,"file":"static/js/985.a9769902.chunk.js","mappings":"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","sources":["api/services/movies.services.ts","components/BoxPage/BoxPage.styles.js","components/BoxPage/BoxPage.tsx","components/ItemMovie/ItemMovie.styles.js","components/ItemMovie/ItemMovie.tsx","pages/Movies/Movies.styles.js","pages/Movies/Movies.tsx","api/hooks/useMoviesByName.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 50px 0;\n\n  // css class mui item\n  & .css-r93niq-MuiButtonBase-root-MuiPaginationItem-root {\n    color: #fff;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n\n  font-size: 36px;\n  text-align: center;\n`;\n\nexport const Page = styled.p`\n  margin-bottom: 15px;\n  margin-left: 10px;\n\n  font-size: 14px;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 40px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  /* margin: 5px; */\n\n  &:not(:nth-child(5n)) {\n    margin-right: 10px;\n  }\n\n  &:nth-last-child(n + 6) {\n    margin-bottom: 20px;\n  }\n\n  width: calc((100% - 40px) / 5);\n`;\n\nexport const WrapperPagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport slugify from 'slugify';\nimport { Link } from 'react-router-dom';\nimport { Container } from '@mui/material';\n\nimport ItemMovie from 'components/ItemMovie';\nimport {\n  Wrapper,\n  Title,\n  Page,\n  List,\n  Item,\n  WrapperPagination,\n} from './BoxPage.styles';\n\n//make slug for pathname\nconst makeSlug = string => slugify(string, { lower: true });\n\nconst BoxPage = ({ title, movies, handleClick, page }) => {\n  return (\n    <Container>\n      <Wrapper>\n        {title && <Title>{title}</Title>}\n        <Page>\n          Page {page} of {movies?.data.total_pages}\n        </Page>\n        <List>\n          {movies?.data.results.map(movie => (\n            <Item key={movie.id}>\n              <Link\n                to={{\n                  pathname: `/movies/all/${makeSlug(\n                    movie.original_title || movie.original_name\n                  )}-${movie.id}`,\n                }}\n              >\n                <ItemMovie\n                  src={movie.poster_path}\n                  date={movie.release_date || movie.first_air_date}\n                  name={movie.original_title || movie.original_name}\n                />\n              </Link>\n            </Item>\n          ))}\n        </List>\n        <WrapperPagination>\n          <Pagination\n            count={movies?.data.total_pages}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            color=\"primary\"\n            onChange={e => handleClick(Number(e.target.textContent))}\n            page={page}\n          />\n        </WrapperPagination>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxPage;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 200px;\n  height: 280px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 18px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n`;\n\nexport const Name = styled.span`\n  margin-top: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\n\nimport noPoster from '../../assets/not-found-poster.png';\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n          width=\"100%\"\n          alt={name}\n        />\n        <Backdrop>\n          <AiFillEye size=\"34px\" />\n        </Backdrop>\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 80px 0;\n\n  /* background-color: #333; */\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n\n  font-size: 22px;\n\n  &::after {\n    position: absolute;\n    top: 100%;\n    content: '';\n    display: block;\n    height: 1px;\n    width: 110%;\n\n    background-color: #fff;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n\n  border: none;\n  outline: none;\n  color: #fff;\n  background-color: transparent;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 18px;\n\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  margin: -5px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  margin: 5px;\n\n  width: calc((100% - 50px) / 5);\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useMoviesByName } from 'api/hooks/useMoviesByName.ts';\nimport { Container } from '@mui/material';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nimport BoxPage from 'components/BoxPage';\nimport { Wrapper, Form, Label, Input, Button, InfoText } from './Movies.styles';\n\nconst Movie = () => {\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('query');\n  const searchParamPage = new URLSearchParams(location.search).get('page');\n  const [value, setValue] = useState(searchParam || '');\n  const [page, setPage] = useState(Number(searchParamPage) || 1);\n\n  const { moviesByName, refetch } = useMoviesByName(value, page);\n\n  useEffect(() => {\n    if (searchParam) {\n      setValue(searchParam);\n      refetch();\n      window.scrollTo(0, 0);\n    }\n  }, [searchParam, refetch]);\n\n  useEffect(() => {\n    refetch();\n    window.scrollTo(0, 0);\n  }, [page, refetch]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleClick = (page: number) => {\n    setPage(page);\n    navigation({ ...location, search: `query=${value}&page=${page}` });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) {\n      toast.info('Please input text');\n      return;\n    }\n    setPage(1);\n    navigation({ ...location, search: `query=${value}&page=1` });\n    refetch();\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <Input\n              placeholder=\"Search movies\"\n              value={value}\n              onChange={handleChange}\n            />\n          </Label>\n          <Button type=\"submit\">\n            <AiOutlineSearch color=\"#fff\" size=\"24px\" />\n          </Button>\n        </Form>\n        <InfoText>\n          {moviesByName?.data.total_results}{' '}\n          {moviesByName?.data.total_results > 1 ? 'movies' : 'movie'} found for\n          your query\n        </InfoText>\n        {moviesByName && (\n          <BoxPage\n            movies={moviesByName}\n            page={page}\n            handleClick={handleClick}\n          />\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Movie;\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMoviesByName } from 'api/services/movies.services.ts';\n\nexport const useMoviesByName = (name: string, page) => {\n  const { data: moviesByName, refetch } = useQuery(\n    'movies by name',\n    () => getMoviesByName(name, page),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n      enabled: false,\n    }\n  );\n\n  return { moviesByName, refetch };\n};\n"],"names":["KEY","axios","getTrendingMovies","page","params","api_key","getPopularMovies","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Wrapper","styled","Title","Page","List","Item","WrapperPagination","title","movies","handleClick","Container","data","total_pages","results","map","movie","to","pathname","string","original_title","original_name","slugify","lower","ItemMovie","src","poster_path","date","release_date","first_air_date","Pagination","count","variant","shape","color","onChange","e","Number","target","textContent","Poster","Backdrop","Date","Name","noPoster","width","alt","size","Form","Label","Input","Button","InfoText","navigation","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","searchParamPage","useState","value","setValue","setPage","useQuery","onError","error","toast","message","enabled","moviesByName","refetch","useMoviesByName","useEffect","window","scrollTo","onSubmit","preventDefault","placeholder","type","total_results","BoxPage"],"sourceRoot":""}