{"version":3,"file":"static/js/185.091a376a.chunk.js","mappings":"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","sources":["api/services/movies.services.ts","components/BoxMovie/BoxMovie.style.js","components/BoxMovie/BoxMovie.tsx","components/ItemMovie/ItemMovie.style.js","components/ItemMovie/ItemMovie.tsx","components/BoxCast/BoxCast.style.js","components/BoxCast/BoxCast.tsx","pages/MovieDetails/MovieDetails.style.js","pages/MovieDetails/MovieDetails.tsx","api/hooks/useMovieById.ts","api/hooks/useMovieVideoById.ts","api/hooks/useMovieSimilar.ts","api/hooks/useMovieCast.ts","services/slug.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularTv = async () => {\n  return await axios('/tv/popular', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin-top: 130px;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 40%;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 58px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto';\n  font-weight: 600;\n  font-size: 48px;\n  line-height: 1.16;\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.16;\n\n  color: #ffffff;\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport slugify from 'slugify';\n\nimport { Container } from '@mui/material';\n\nimport ItemMovie from 'components/ItemMovie/ItemMovie.tsx';\nimport { Section, Wrapper, Title, LinkStyled } from './BoxMovie.style';\n\ninterface BoxMovieProps {\n  title: string;\n  path: string;\n}\n\n// settings for react-slick\nconst settings = {\n  dots: true,\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 5,\n  swipeToSlide: true,\n};\n//make slug for pathname\nconst makeSlug = (string: string) => slugify(string, { lower: true });\n\nconst BoxMovie: FC<BoxMovieProps> = ({ movies, title, path }) => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <Title>{title}</Title>\n          {path && <LinkStyled to={path}>View all</LinkStyled>}\n        </Wrapper>\n        <Slider {...settings}>\n          {movies &&\n            movies?.data?.results.map(movie => (\n              <div key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/all/${makeSlug(\n                      movie.original_title || movie.original_name\n                    )}-${movie.id}`,\n                  }}\n                >\n                  <ItemMovie\n                    src={movie.poster_path}\n                    date={movie.release_date || movie.first_air_date}\n                    name={movie.original_title || movie.original_name}\n                  />\n                </Link>\n              </div>\n            ))}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default BoxMovie;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  width: 200px;\n  height: 280px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: ${props => props.color};\n`;\n\nexport const Date = styled.span`\n  margin-top: 18px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n`;\n\nexport const Name = styled.span`\n  margin-top: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n\n  color: #fff;\n`;\n","import React, { FC } from 'react';\n\nimport { Item, Poster, Date, Name } from './ItemMovie.style';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${src}`}\n          width=\"100%\"\n          alt={name}\n        />\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 40%;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 10px 0;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  width: 138px;\n  height: 207px;\n  margin-bottom: 10px;\n\n  overflow: hidden;\n  border-radius: 10px;\n  background-color: #111;\n`;\n\nexport const Name = styled.span`\n  font-size: 18px;\n\n  text-align: center;\n  color: #fff;\n`;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport slugify from 'slugify';\n\nimport { Container } from '@mui/material';\n\nimport {\n  Wrapper,\n  Title,\n  Item,\n  Name,\n  Poster,\n} from 'components/BoxCast/BoxCast.style';\n\n// settings for react-slick\nconst settings = {\n  dots: true,\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 7,\n  swipeToSlide: true,\n};\n//make slug for pathname\nconst makeSlug = (string: string) => slugify(string, { lower: true });\n\nconst BoxCast = ({ cast, title }) => {\n  return (\n    <Container>\n      <Wrapper>\n        <Title>{title}</Title>\n      </Wrapper>\n      <Slider {...settings}>\n        {cast &&\n          cast?.data?.cast.map(actor => (\n            <div key={actor.id}>\n              <Link\n                to={{\n                  pathname: `/movies/person/${makeSlug(\n                    actor.name || actor.original_name\n                  )}-${actor.id}`,\n                }}\n              >\n                <Item>\n                  <Poster>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                      width=\"100%\"\n                      alt={actor.name || actor.original_name}\n                    />\n                  </Poster>\n                  <Name>{actor.name || actor.original_name}</Name>\n                </Item>\n              </Link>\n            </div>\n          ))}\n      </Slider>\n    </Container>\n  );\n};\n\nexport default BoxCast;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 50px 0 0 0;\n`;\n\nexport const BackdropInfo = styled.div`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  height: 750px;\n\n  display: flex;\n  align-items: center;\n\n  background-color: #111;\n  background-image: ${props =>\n    `linear-gradient(83deg, rgba(0,0,0,0.6674019949776786) 0%, rgba(0,0,0,0.7486344879748774) 100%),url(https://image.tmdb.org/t/p/original/${props.img})`};\n  background-size: cover;\n`;\n\nexport const WrapperInfo = styled.div`\n  display: flex;\n\n  /* background-color: #111; */\n`;\n\nexport const Poster = styled.div`\n  width: 450px;\n  height: 650px;\n  flex-shrink: 0;\n\n  overflow: hidden;\n  border-radius: 10px;\n  background-color: #111;\n`;\n\nexport const Info = styled.div`\n  /* width: 100%; */\n  padding-left: 15px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-family: 'DM Sans';\n`;\n\nexport const Genre = styled.span`\n  padding: 5px 10px;\n\n  border-radius: 10px;\n  background-color: #555;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const InfoName = styled.span`\n  margin-top: 10px;\n\n  font-size: 24px;\n`;\n\nexport const InfoValue = styled.span`\n  font-size: 16px;\n`;\n\nexport const LogoList = styled.ul`\n  margin: 10px -10px -10px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Logo = styled.li`\n  padding: 5px;\n  margin: 10px;\n\n  font-size: 18px;\n\n  border: 1px solid #fff;\n`;\n\nexport const WrapperVideo = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Container } from '@mui/material';\nimport Rating from '@mui/material/Rating';\n\nimport { useMovieCast } from 'api/hooks/useMovieCast.ts';\nimport { useMovieSimilar } from 'api/hooks/useMovieSimilar.ts';\nimport { useMovieById } from 'api/hooks/useMovieById.ts';\nimport { useMovieVideoById } from 'api/hooks/useMovieVideoById.ts';\nimport BoxMovie from 'components/BoxMovie';\nimport BoxCast from 'components/BoxCast';\nimport makeIdFromSlug from 'services/slug.ts';\nimport {\n  Wrapper,\n  Title,\n  Poster,\n  WrapperInfo,\n  Info,\n  Genre,\n  InfoName,\n  InfoValue,\n  Logo,\n  LogoList,\n  WrapperVideo,\n  BackdropInfo,\n} from './MovieDetails.style';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const id = makeIdFromSlug(location.pathname);\n\n  const { movieById, refetchMovieById } = useMovieById(id);\n  const { movieVideo, refetchMovie } = useMovieVideoById(id);\n  const { movieSimilar, refetchMoviesSimilar } = useMovieSimilar(id);\n  const { movieCast } = useMovieCast(id);\n\n  useEffect(() => {\n    refetchMovieById();\n    refetchMoviesSimilar();\n    refetchMovie();\n    window.scrollTo(0, 0);\n  }, [location, refetchMovieById, refetchMoviesSimilar, refetchMovie]);\n\n  return (\n    <>\n      {movieById && (\n        <BackdropInfo img={movieById.data.backdrop_path}>\n          <Container>\n            <WrapperInfo>\n              <Poster>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${movieById.data.poster_path}`}\n                  alt={movieById?.data.original_title}\n                  width=\"100%\"\n                />\n              </Poster>\n              <Info>\n                <Title>{movieById.data.original_title}</Title>\n\n                <WrapperInfo>\n                  {movieById.data.genres.map((item, index) => (\n                    <Genre key={index}>{item.name.toLowerCase()}</Genre>\n                  ))}\n                </WrapperInfo>\n\n                <InfoName>\n                  Release date:{' '}\n                  <InfoValue>{movieById.data.release_date}</InfoValue>\n                </InfoName>\n                <InfoName>\n                  Tagline: <InfoValue>{movieById.data.tagline}</InfoValue>\n                </InfoName>\n                <InfoName>\n                  <InfoValue>{movieById.data.overview}</InfoValue>\n                </InfoName>\n                <InfoName>\n                  <Rating\n                    value={movieById.data.vote_average}\n                    precision={0.1}\n                    readOnly\n                    max={10}\n                  />\n                </InfoName>\n                <InfoName>Prodaction companies:</InfoName>\n                <LogoList>\n                  {movieById.data.production_companies.map((item, index) => (\n                    <Logo key={index}>{item.name}</Logo>\n                  ))}\n                </LogoList>\n              </Info>\n            </WrapperInfo>\n          </Container>\n        </BackdropInfo>\n      )}\n\n      <Container>\n        <Wrapper>\n          <BoxCast cast={movieCast} title=\"Cast and crew\" />\n          <WrapperVideo>\n            {movieVideo?.data?.results[0]?.key && (\n              <iframe\n                width=\"853\"\n                height=\"480\"\n                src={`https://www.youtube.com/embed/${movieVideo?.data.results[0].key}`}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                title=\"Embedded youtube\"\n              />\n            )}\n          </WrapperVideo>\n          {movieSimilar && (\n            <BoxMovie movies={movieSimilar} title=\"Similar movies\" path=\"/\" />\n          )}\n        </Wrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieById } from 'api/services/movies.services.ts';\n\nexport const useMovieById = id => {\n  const { data: movieById, refetch: refetchMovieById } = useQuery(\n    'movie by id',\n    () => getMovieById(id),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { movieById, refetchMovieById };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieVideoById } from 'api/services/movies.services.ts';\n\nexport const useMovieVideoById = id => {\n  const { data: movieVideo, refetch: refetchMovie } = useQuery(\n    'movie video',\n    () => getMovieVideoById(id),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { movieVideo, refetchMovie };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieSimilar } from 'api/services/movies.services.ts';\n\nexport const useMovieSimilar = id => {\n  const { data: movieSimilar, refetch: refetchMoviesSimilar } = useQuery(\n    'movie somilar',\n    () => getMovieSimilar(id),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n  return { movieSimilar, refetchMoviesSimilar };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieCast } from 'api/services/movies.services.ts';\n\nexport const useMovieCast = (id: string) => {\n  const { data: movieCast, refetch: refetchMovieCast } = useQuery(\n    'movie cast',\n    () => getMovieCast(id),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { movieCast, refetchMovieCast };\n};\n","export default function makeIdFromSlug(slug) {\n  return slug.match(/[a-z0-9]+$/)[0];\n}\n"],"names":["KEY","axios","getTrendingMovies","page","params","api_key","getPopularMovies","getPopularTv","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","Section","styled","Wrapper","Title","LinkStyled","Link","settings","dots","infinite","speed","slidesToScroll","slidesToShow","swipeToSlide","movies","title","path","Container","to","data","results","map","movie","pathname","string","original_title","original_name","slugify","lower","ItemMovie","src","poster_path","date","release_date","first_air_date","Item","Poster","props","color","Date","Name","width","alt","cast","actor","profile_path","BackdropInfo","img","WrapperInfo","Info","Genre","InfoName","InfoValue","LogoList","Logo","WrapperVideo","location","useLocation","makeIdFromSlug","useQuery","onError","error","toast","message","movieById","refetchMovieById","refetch","useMovieById","movieVideo","refetchMovie","useMovieVideoById","movieSimilar","refetchMoviesSimilar","useMovieSimilar","movieCast","refetchMovieCast","useMovieCast","useEffect","window","scrollTo","backdrop_path","genres","item","index","toLowerCase","tagline","overview","Rating","value","vote_average","precision","readOnly","max","production_companies","key","height","frameBorder","allow","allowFullScreen","BoxMovie","slug","match"],"sourceRoot":""}