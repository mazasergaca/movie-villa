{"version":3,"file":"static/js/143.296dc2eb.chunk.js","mappings":"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","sources":["api/hooks/useTrendingMovies.ts","api/services/movies-services.ts","components/BoxPage/BoxPage.styles.ts","components/BoxPage/index.tsx","components/ItemMovie/ItemMovie.styles.ts","components/ItemMovie/index.tsx","pages/TrendingMovies/index.tsx","services/make-slug.ts"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { getTrendingMovies } from '../services/movies-services';\n\nexport const useTrendingMovies = (page: number) => {\n  const { data: trendingMovies, refetch } = useQuery('trending movies', () =>\n    getTrendingMovies(page)\n  );\n\n  return { trendingMovies, refetch };\n};\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 30px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 0;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 50px 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n\n  font-size: 30px;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Page = styled.p`\n  margin-bottom: 10px;\n  margin-left: 5px;\n\n  font-size: 14px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 15px;\n    margin-left: 10px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Item = styled.li`\n  @media screen and (max-width: 479px) {\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 3) {\n      margin-bottom: 20px;\n    }\n\n    width: calc((100% - 10px) / 2);\n  }\n\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n    width: calc((100% - 15px) / 3);\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 4) {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: calc((100% - 40px) / 4);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 5) {\n      margin-bottom: 20px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 40px) / 5);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 6) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const WrapperPagination = styled.div`\n  display: flex;\n  justify-content: center;\n\n  & button {\n    color: #fff;\n  }\n`;\n\nexport const ButtonPagination = styled.button``;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@mui/material/Pagination';\nimport PaginationItem from '@mui/material/PaginationItem';\nimport { Container } from '@mui/material';\n\nimport { makeSlug } from '../../services/make-slug';\nimport ItemMovie from '../ItemMovie';\nimport {\n  Wrapper,\n  Title,\n  Page,\n  List,\n  Item,\n  WrapperPagination,\n  ButtonPagination,\n} from './BoxPage.styles';\n\ninterface BoxPageProps {\n  title?: string;\n  movies: any;\n  handleClick: (numberPage: number) => void;\n  page: number;\n}\n\ninterface ItemI {\n  id: number;\n  original_title: string;\n  original_name: string;\n  poster_path: string;\n  release_date: string;\n  first_air_date: string;\n}\n\nconst BoxPage: FC<BoxPageProps> = ({ title, movies, handleClick, page }) => {\n  return (\n    <Container>\n      <Wrapper>\n        {title && <Title>{title}</Title>}\n        <Page>\n          Page {page} of {movies?.data.total_pages}\n        </Page>\n        <List>\n          {movies?.data.results.map(\n            ({\n              id,\n              original_title,\n              original_name,\n              poster_path,\n              release_date,\n              first_air_date,\n            }: ItemI) => (\n              <Item key={id}>\n                <Link\n                  to={{\n                    pathname: `/movies/all/${makeSlug(\n                      original_title || original_name\n                    )}-${id}`,\n                  }}\n                >\n                  <ItemMovie\n                    src={poster_path}\n                    date={release_date || first_air_date}\n                    name={original_title || original_name}\n                  />\n                </Link>\n              </Item>\n            )\n          )}\n        </List>\n        <WrapperPagination>\n          <Pagination\n            count={movies?.data.total_pages}\n            size=\"small\"\n            variant=\"outlined\"\n            shape=\"rounded\"\n            color=\"secondary\"\n            renderItem={(item: any) => (\n              <PaginationItem\n                component={ButtonPagination}\n                {...item}\n                onClick={() => handleClick(item.page)}\n              />\n            )}\n            page={page}\n          />\n        </WrapperPagination>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxPage;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n    height: 280px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 10px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Name = styled.span`\n  margin-top: 4px;\n\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 6px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\nimport noPoster from '../../assets/not-found-poster.png';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n          width=\"100%\"\n          alt={name}\n        />\n        <Backdrop>\n          <AiFillEye size=\"34px\" />\n        </Backdrop>\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import React, { useState, useEffect, FC } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport { useTrendingMovies } from 'api/hooks/useTrendingMovies';\nimport BoxPage from 'components/BoxPage';\n\nconst Trending: FC = () => {\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('page');\n\n  const [page, setPage] = useState(Number(searchParam) || 1);\n\n  const { trendingMovies, refetch } = useTrendingMovies(page);\n\n  const handleClick = (page: number) => {\n    setPage(page);\n    navigation({ ...location, search: `page=${page}` });\n  };\n\n  useEffect(() => {\n    refetch();\n    window.scrollTo(0, 0);\n  }, [page, refetch]);\n\n  return (\n    <BoxPage\n      title=\"Trending\"\n      movies={trendingMovies}\n      handleClick={handleClick}\n      page={page}\n    />\n  );\n};\n\nexport default Trending;\n","import slugify from 'slugify';\n\nexport const makeSlug = (string: string) => slugify(string, { lower: true });\n"],"names":["useTrendingMovies","page","useQuery","getTrendingMovies","trendingMovies","data","refetch","KEY","axios","params","api_key","getPopularMovies","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Wrapper","styled","Title","Page","List","Item","WrapperPagination","ButtonPagination","title","movies","handleClick","Container","total_pages","results","map","original_title","original_name","poster_path","release_date","first_air_date","to","pathname","makeSlug","ItemMovie","src","date","Pagination","count","size","variant","shape","color","renderItem","item","PaginationItem","component","onClick","Poster","Backdrop","Date","Name","noPoster","width","alt","navigation","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","useState","Number","setPage","useEffect","window","scrollTo","string","slugify","lower"],"sourceRoot":""}