{"version":3,"file":"static/js/686.ef9798dd.chunk.js","mappings":"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","sources":["api/services/movies.services.ts","components/ItemMovie/ItemMovie.style.js","components/ItemMovie/ItemMovie.tsx","components/Hero/Hero.style.js","components/Hero/Hero.tsx","components/BoxMovie/BoxMovie.style.js","components/BoxMovie/BoxMovie.tsx","components/Footer/Footer.style.js","components/Footer/Footer.tsx","pages/Home/Home.tsx","api/hooks/usePopularMovies.ts","api/hooks/useTrendingMovies.ts","api/hooks/usePopularTv.ts","api/hooks/useRatedMovies.ts","api/hooks/useUpcomingMovies.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async () => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPopularMovies = async () => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPopularTv = async () => {\n  return await axios('/tv/popular', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getRatedMovies = async () => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async () => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  width: 200px;\n  height: 280px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: ${props => props.color};\n`;\n\nexport const Date = styled.span`\n  margin-top: 18px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n`;\n\nexport const Name = styled.span`\n  margin-top: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\n\nimport { Item, Poster, Date, Name } from './ItemMovie.style';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${src}`}\n          width=\"100%\"\n          alt={name}\n        />\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  height: 600px;\n\n  background-color: #002;\n\n  & .slick-dots {\n    bottom: 35px;\n  }\n\n  & .slick-dots li button:before {\n    font-size: 10px;\n\n    color: #ccc;\n  }\n  & .slick-dots li.slick-active button:before {\n    color: #ff3b5f;\n  }\n`;\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 1800px;\n  height: 100%;\n`;\n\nexport const Poster = styled.div`\n  height: 600px;\n\n  background-image: ${props =>\n    `url(https://image.tmdb.org/t/p/original${props.color})`};\n  background-size: cover;\n  background-position: center;\n`;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nimport { getTrendingMovies } from 'api/services/movies.services.ts';\nimport { Section, Container, Poster } from './Hero.style';\n\n// settings for react-slick\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 900,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  arrows: false,\n  adaptiveHeight: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n};\n\n// const arr = ['#04122e', '#320d3d', '#383200'];\n\nconst Hero = () => {\n  const { data: movies } = useQuery('trending poster', getTrendingMovies);\n\n  return (\n    <Section>\n      <Container>\n        <Slider {...settings}>\n          {movies &&\n            movies.data.results.slice(0, 3).map(movie => (\n              <div key={movie.id}>\n                <Poster color={movie.backdrop_path}></Poster>\n              </div>\n            ))}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Hero;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-top: 130px;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 40%;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 58px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto';\n  font-weight: 600;\n  font-size: 48px;\n  line-height: 1.16;\n`;\n\nexport const Link = styled.a`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.16;\n\n  color: #ffffff;\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport { Container } from '@mui/material';\n\nimport ItemMovie from 'components/ItemMovie/ItemMovie.tsx';\nimport { Section, Wrapper, Title, Link } from './BoxMovie.style';\n\ninterface BoxMovieProps {\n  title: string;\n}\n\n// settings for react-slick\nconst settings = {\n  dots: true,\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 5,\n  swipeToSlide: true,\n};\n\nconst BoxMovie: FC<BoxMovieProps> = ({ movies, title }) => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <Title>{title}</Title>\n          <Link href=\"#\">View all</Link>\n        </Wrapper>\n        <Slider {...settings}>\n          {movies &&\n            movies?.data?.results.map(movie => (\n              <div key={movie.id}>\n                <ItemMovie\n                  src={movie.poster_path}\n                  date={movie.release_date || movie.first_air_date}\n                  name={movie.original_title || movie.original_name}\n                />\n              </div>\n            ))}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default BoxMovie;\n","import styled from 'styled-components';\n\nexport const FooterStyled = styled.footer``;\n\nexport const Wrapper = styled.div`\n  padding: 130px 0;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 36px;\n\n  display: flex;\n`;\n\nexport const Item = styled.li`\n  font-weight: 700;\n  font-size: 18px;\n  &:not(:last-child) {\n    margin-right: 48px;\n  }\n`;\n\nexport const Text = styled.span`\n  font-weight: 700;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { Container } from '@mui/material';\nimport {\n  AiFillFacebook,\n  AiOutlineInstagram,\n  AiOutlineTwitter,\n  AiFillYoutube,\n} from 'react-icons/ai';\n\nimport { FooterStyled, Wrapper, List, Item, Text } from './Footer.style';\n\nconst Footer = () => {\n  return (\n    <FooterStyled>\n      <Container>\n        <Wrapper>\n          <List>\n            <Item>\n              <a\n                href=\"https://www.facebook.com\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <AiFillFacebook size=\"24px\" color=\"#fff\" />\n              </a>\n            </Item>\n            <Item>\n              <a\n                href=\"https://www.instagram.com/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <AiOutlineInstagram size=\"24px\" color=\"#fff\" />\n              </a>\n            </Item>\n            <Item>\n              <a href=\"https://twitter.com/\" target=\"_blank\" rel=\"noreferrer\">\n                <AiOutlineTwitter size=\"24px\" color=\"#fff\" />\n              </a>\n            </Item>\n            <Item>\n              <a\n                href=\"https://www.youtube.com/?&ab_channel=OtherMusic\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <AiFillYoutube size=\"24px\" color=\"#fff\" />\n              </a>\n            </Item>\n          </List>\n          <List>\n            <Item>Conditions of Use</Item>\n            <Item>Privacy & Policy</Item>\n            <Item>Press Room</Item>\n          </List>\n          <Text>© 2022 MovieVilla by Tanmay Jitendra Thakare</Text>\n        </Wrapper>\n      </Container>\n    </FooterStyled>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { usePopularMovies } from 'api/hooks/usePopularMovies.ts';\nimport { useTrendingMovies } from 'api/hooks/useTrendingMovies.ts';\nimport { usePopularTv } from 'api/hooks/usePopularTv.ts';\nimport { useRatedMovies } from 'api/hooks/useRatedMovies.ts';\nimport { useUpcomingMovies } from 'api/hooks/useUpcomingMovies.ts';\n\nimport Hero from 'components/Hero';\nimport BoxMovie from 'components/BoxMovie';\nimport Footer from 'components/Footer';\n\nconst Home = () => {\n  const { popularMovies } = usePopularMovies();\n  const { trendingMovies } = useTrendingMovies();\n  const { popularTv } = usePopularTv();\n  const { ratedMovies } = useRatedMovies();\n  const { upcomingMovies } = useUpcomingMovies();\n\n  return (\n    <>\n      <Hero />\n      <BoxMovie movies={trendingMovies} title=\"Latest and trending\" />\n      <BoxMovie movies={popularMovies} title=\"Popular\" />\n      <BoxMovie movies={ratedMovies} title=\"Top rated\" />\n      <BoxMovie movies={upcomingMovies} title=\"Upcoming movies in theatres\" />\n      {/* <BoxMovie movies={arr} title=\"Anime\" /> */}\n      <BoxMovie movies={popularTv} title=\"TV shows\" />\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getPopularMovies } from 'api/services/movies.services.ts';\n\nexport const usePopularMovies = () => {\n  const { data: popularMovies } = useQuery('popular movies', getPopularMovies, {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n  return { popularMovies };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getTrendingMovies } from 'api/services/movies.services.ts';\n\nexport const useTrendingMovies = () => {\n  const { data: trendingMovies } = useQuery(\n    'trending movies',\n    getTrendingMovies,\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { trendingMovies };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getPopularTv } from 'api/services/movies.services.ts';\n\nexport const usePopularTv = () => {\n  const { data: popularTv } = useQuery('popular tv', getPopularTv, {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n\n  return { popularTv };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getRatedMovies } from 'api/services/movies.services.ts';\n\nexport const useRatedMovies = () => {\n  const { data: ratedMovies } = useQuery('rated movies', getRatedMovies, {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n  return { ratedMovies };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getUpcomingMovie } from 'api/services/movies.services.ts';\n\nexport const useUpcomingMovies = () => {\n  const { data: upcomingMovies } = useQuery(\n    'upcoming movies',\n    getUpcomingMovie,\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { upcomingMovies };\n};\n"],"names":["KEY","axios","getTrendingMovies","params","api_key","getPopularMovies","getPopularTv","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","Item","styled","Poster","props","color","Date","Name","src","date","width","alt","Section","Container","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","adaptiveHeight","autoplay","autoplaySpeed","movies","useQuery","data","results","slice","map","movie","backdrop_path","id","Wrapper","Title","Link","swipeToSlide","title","href","ItemMovie","poster_path","release_date","first_air_date","original_title","original_name","FooterStyled","List","Text","target","rel","size","popularMovies","onError","error","toast","message","trendingMovies","popularTv","ratedMovies","upcomingMovies"],"sourceRoot":""}