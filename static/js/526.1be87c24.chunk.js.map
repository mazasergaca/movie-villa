{"version":3,"file":"static/js/526.1be87c24.chunk.js","mappings":"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","sources":["api/services/movies-services.ts","components/BoxMovie/BoxMovie.styles.ts","components/BoxMovie/index.tsx","components/ItemMovie/ItemMovie.styles.ts","components/ItemMovie/index.tsx","components/BoxCast/BoxCast.styles.ts","components/BoxCast/index.tsx","pages/MovieDetails/MovieDetails.styles.ts","pages/MovieDetails/index.tsx","api/hooks/useMovieById.ts","api/hooks/useMovieVideoById.ts","api/hooks/useMovieSimilar.ts","api/hooks/useMovieCast.ts","api/hooks/useReviewsMovie.ts","api/hooks/useMovieImages.ts","services/make-slug.ts","services/slider-settings.ts","services/slug.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin-top: 40px;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 30%;\n  }\n\n  & .slick-next {\n    right: -12px;\n  }\n  & .slick-prev {\n    left: -12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 90px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 130px;\n    & .slick-arrow {\n      top: 40%;\n    }\n\n    & .slick-next {\n      right: -35px;\n    }\n    & .slick-prev {\n      left: -35px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 45px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 58px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto';\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 1.16;\n\n  @media screen and (min-width: 768px) {\n    font-size: 42px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 48px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.16;\n\n  color: #ffffff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport { Container } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport { makeSlug } from 'services/make-slug';\nimport { sliderSettingsForBoxMovie } from 'services/slider-settings';\nimport ItemMovie from 'components/ItemMovie';\nimport { Section, Wrapper, Title, LinkStyled } from './BoxMovie.styles';\n\ninterface BoxMovieProps {\n  isLoading: boolean;\n  movies: any;\n  title: string;\n  path?: string;\n}\n\ninterface Item {\n  id: number;\n  original_title: string;\n  original_name: string;\n  poster_path: string;\n  release_date: string;\n  first_air_date: string;\n}\n\nconst BoxMovie: FC<BoxMovieProps> = ({ isLoading, movies, title, path }) => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          {!isLoading ? (\n            <Title>{title}</Title>\n          ) : (\n            <Skeleton variant=\"rectangular\" width={192} height={55} />\n          )}\n          {path && !isLoading && <LinkStyled to={path}>View all</LinkStyled>}\n          {isLoading && (\n            <Skeleton variant=\"rectangular\" width={68} height={23} />\n          )}\n        </Wrapper>\n        <Slider {...sliderSettingsForBoxMovie}>\n          {movies &&\n            movies?.data?.results.map(\n              ({\n                id,\n                original_title,\n                original_name,\n                poster_path,\n                release_date,\n                first_air_date,\n              }: Item) => (\n                <div key={id}>\n                  <Link\n                    to={{\n                      pathname: `/movies/all/${makeSlug(\n                        original_title || original_name\n                      )}-${id}`,\n                    }}\n                  >\n                    <ItemMovie\n                      src={poster_path}\n                      date={release_date || first_air_date}\n                      name={original_title || original_name}\n                    />\n                  </Link>\n                </div>\n              )\n            )}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default BoxMovie;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n    height: 280px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 10px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Name = styled.span`\n  margin-top: 4px;\n\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 6px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\nimport noPoster from '../../assets/not-found-poster.png';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <>\n      <Item>\n        <Poster>\n          <img\n            src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n            width=\"100%\"\n            alt={name}\n          />\n          <Backdrop>\n            <AiFillEye size=\"34px\" />\n          </Backdrop>\n        </Poster>\n        <Date>{date}</Date>\n        <Name>{name}</Name>\n      </Item>\n    </>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 40%;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 10px 0;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n  margin-bottom: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 480px) {\n    width: 138px;\n    height: 207px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Name = styled.span`\n  font-size: 14px;\n\n  text-align: center;\n  color: #fff;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 480px) {\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport { AiFillEye } from 'react-icons/ai';\nimport { Container } from '@mui/material';\n\nimport { makeSlug } from 'services/make-slug';\nimport { sliderSettingsForBoxCast } from 'services/slider-settings';\nimport noPhoto from 'assets/no_photo.png';\nimport { Wrapper, Title, Item, Name, Poster, Backdrop } from './BoxCast.styles';\n\ninterface BoxCastProps {\n  cast: any;\n  title: string;\n}\n\ninterface ItemI {\n  id: number;\n  name: string;\n  original_name: string;\n  profile_path: string;\n}\n\nconst BoxCast: FC<BoxCastProps> = ({ cast, title }) => {\n  return (\n    <Container>\n      <Wrapper>\n        <Title>{title}</Title>\n\n        <Slider {...sliderSettingsForBoxCast}>\n          {cast &&\n            cast?.data.cast.map(\n              ({ id, name, original_name, profile_path }: ItemI) => (\n                <div key={id}>\n                  <Link\n                    to={{\n                      pathname: `/movies/person/${makeSlug(\n                        name || original_name\n                      )}-${id}`,\n                    }}\n                  >\n                    <Item>\n                      <Poster>\n                        <img\n                          src={\n                            profile_path\n                              ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                              : noPhoto\n                          }\n                          width=\"100%\"\n                          alt={name || original_name}\n                        />\n                        <Backdrop>\n                          <AiFillEye size=\"38px\" />\n                        </Backdrop>\n                      </Poster>\n                      <Name>{name || original_name}</Name>\n                    </Item>\n                  </Link>\n                </div>\n              )\n            )}\n        </Slider>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxCast;\n","import styled from 'styled-components';\n\ninterface StyleProps {\n  $backdrop: string;\n}\n\nexport const Wrapper = styled.div`\n  padding: 20px 0 0 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 50px 0 0 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 50px 0 0 0;\n  }\n`;\n\nexport const BackdropInfo = styled.div<StyleProps>`\n  margin: 20px auto;\n  padding: 10px 0;\n\n  display: flex;\n  align-items: center;\n  background-color: #222;\n  background-image: ${props =>\n    props.$backdrop\n      ? `linear-gradient(83deg, rgba(0,0,0,0.6674019949776786) 0%, rgba(0,0,0,0.7486344879748774) 100%),url(https://image.tmdb.org/t/p/original/${props.$backdrop})`\n      : 'none'};\n\n  background-size: cover;\n\n  @media screen and (min-width: 768px) {\n    padding: 0;\n    margin: 30px auto;\n    height: 500px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: 40px auto;\n    height: 750px;\n    max-width: 2100px;\n  }\n`;\n\nexport const WrapperInfo = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const Poster = styled.div`\n  width: 300px;\n  height: 420px;\n  margin: 0 auto 10px;\n  flex-shrink: 0;\n\n  overflow: hidden;\n  border-radius: 10px;\n  background-color: #111;\n  @media screen and (min-width: 480px) {\n    width: 300px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    height: 450px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 450px;\n    height: 650px;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    padding-left: 15px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 25px;\n\n  text-align: center;\n  font-size: 28px;\n  font-family: 'DM Sans';\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 10px;\n\n    font-size: 24px;\n  }\n`;\nexport const WrapperGenre = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  @media screen and (max-width: 480px) {\n    margin: -5px;\n  }\n`;\n\nexport const Genre = styled.span`\n  padding: 5px 10px;\n\n  border-radius: 10px;\n  background-color: #555;\n\n  @media screen and (max-width: 480px) {\n    margin: 5px;\n  }\n  @media screen and (min-width: 480px) {\n    &:not(:last-child) {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const InfoName = styled.span`\n  margin-top: 15px;\n\n  font-size: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n\n    font-size: 22px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 10px;\n\n    font-size: 24px;\n  }\n`;\n\nexport const InfoValue = styled.span`\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const LogoList = styled.ul`\n  margin: 6px -6px -6px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) {\n    margin: 10px -10px -10px;\n  }\n`;\n\nexport const Logo = styled.li`\n  padding: 5px;\n  margin: 10px;\n\n  font-size: 16px;\n\n  border: 1px solid #fff;\n\n  @media screen and (min-width: 768px) {\n    margin: 6px;\n\n    font-size: 18px;\n  }\n`;\n\nexport const WrapperMedia = styled.div`\n  margin-top: 35px;\n\n  color: #000;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 50px;\n  }\n`;\n\nexport const WrapperVideo = styled.div`\n  margin-bottom: 15px;\n\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Iframe = styled.iframe`\n  width: 100%;\n  height: 300px;\n  @media screen and (min-width: 480px) {\n    height: 400px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 853px;\n    height: 480px;\n  }\n`;\n\nexport const ListReviews = styled.ul`\n  height: 500px;\n  padding: 0 10px;\n\n  overflow-y: scroll;\n\n  color: #fff;\n`;\n\nexport const InfoReview = styled.div`\n  padding: 5px 0;\n  position: sticky;\n  top: 0;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n\n  background-color: #111;\n`;\n\nexport const AvatarRewiew = styled.div`\n  width: 50px;\n  height: 50px;\n  margin-right: 15px;\n\n  overflow: hidden;\n\n  border-radius: 50%;\n  background-color: #111;\n`;\n\nexport const NameReview = styled.span`\n  font-size: 24px;\n\n  @media screen and (min-width: 480px) {\n    font-size: 26px;\n  }\n`;\n\nexport const Review = styled.p`\n  font-size: 16px;\n\n  &:first-child {\n    padding: 60px;\n  }\n`;\n\nexport const NoReviews = styled.p`\n  padding: 15px;\n\n  font-size: 26px;\n  color: #fff;\n`;\n\nexport const WrappperNotFound = styled.div`\n  width: 100%;\n  height: 50vh;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useEffect, useState, ReactNode, FC } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Container } from '@mui/material';\nimport Rating from '@mui/material/Rating';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport Skeleton from '@mui/material/Skeleton';\nimport { MdReviews } from 'react-icons/md';\nimport { IoMdPhotos } from 'react-icons/io';\n\nimport noPhoto from '../../assets/no_photo.png';\nimport noPoster from '../../assets/not-found-poster.png';\nimport { useMovieImages } from 'api/hooks/useMovieImages';\nimport { useReviewsMovies } from 'api/hooks/useReviewsMovie';\nimport { useMovieCast } from 'api/hooks/useMovieCast';\nimport { useMovieSimilar } from 'api/hooks/useMovieSimilar';\nimport { useMovieById } from 'api/hooks/useMovieById';\nimport { useMovieVideoById } from 'api/hooks/useMovieVideoById';\nimport BoxMovie from 'components/BoxMovie';\nimport BoxCast from 'components/BoxCast';\nimport makeIdFromSlug from 'services/slug';\nimport {\n  Wrapper,\n  Title,\n  Poster,\n  WrapperInfo,\n  Info,\n  Genre,\n  InfoName,\n  InfoValue,\n  Logo,\n  LogoList,\n  WrapperMedia,\n  BackdropInfo,\n  ListReviews,\n  AvatarRewiew,\n  NameReview,\n  Review,\n  WrapperVideo,\n  InfoReview,\n  NoReviews,\n  Iframe,\n  WrappperNotFound,\n  WrapperGenre,\n} from './MovieDetails.styles';\n\ninterface TabPanelProps {\n  children?: ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\nconst a11yProps = (index: number) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n};\n\ninterface ItemI {\n  id: number;\n  name: string;\n}\n\ninterface ReviewI {\n  id: number;\n  author: string;\n  content: string;\n  author_details: any;\n}\ninterface MovieImagesI {\n  file_path: string;\n}\n\nconst MovieDetails: FC = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (_: any, newValue: number): void => {\n    setValue(newValue);\n  };\n\n  const location = useLocation();\n  const id = makeIdFromSlug(location.pathname);\n\n  const {\n    movieById,\n    refetchMovieById,\n    isFetchingMovieById,\n    isErrorMovieById,\n    isLoadingMovieById,\n  } = useMovieById(id);\n\n  const { movieVideo, refetchMovieVideo, isFetchingMovieVideo } =\n    useMovieVideoById(id);\n  const {\n    movieSimilar,\n    refetchMoviesSimilar,\n    isFetchingMoviesSimilar,\n    isLoadingSimilarMovies,\n  } = useMovieSimilar(id);\n  const { movieCast, refetchMovieCast, isFetchingMovieCast } = useMovieCast(id);\n  const { reviewsMovie, isFetchingReviewsMovies } = useReviewsMovies(id);\n  const { movieImages, isFetchingMovieImages } = useMovieImages(id);\n\n  useEffect(() => {\n    refetchMovieById();\n    refetchMoviesSimilar();\n    refetchMovieVideo();\n    refetchMovieCast();\n    window.scrollTo(0, 0);\n  }, [\n    location,\n    refetchMovieById,\n    refetchMoviesSimilar,\n    refetchMovieVideo,\n    refetchMovieCast,\n  ]);\n\n  return (\n    <>\n      {!isErrorMovieById ? (\n        <>\n          <BackdropInfo\n            $backdrop={\n              !isLoadingMovieById && !isFetchingMovieById\n                ? movieById?.data.backdrop_path\n                : ''\n            }\n          >\n            <Container>\n              <WrapperInfo>\n                <Poster>\n                  {!isLoadingMovieById && !isFetchingMovieById ? (\n                    <img\n                      src={\n                        movieById?.data.poster_path\n                          ? `https://image.tmdb.org/t/p/w500/${movieById.data.poster_path}`\n                          : noPoster\n                      }\n                      alt={movieById?.data.original_title}\n                      width=\"100%\"\n                    />\n                  ) : (\n                    <Skeleton\n                      variant=\"rectangular\"\n                      width=\"100%\"\n                      height=\"100%\"\n                    />\n                  )}\n                </Poster>\n                <Info>\n                  {!isLoadingMovieById && !isFetchingMovieById ? (\n                    <Title>{movieById?.data.original_title}</Title>\n                  ) : (\n                    <Skeleton variant=\"text\" width={550} height={32} />\n                  )}\n\n                  {!isLoadingMovieById && !isFetchingMovieById ? (\n                    <WrapperGenre>\n                      {movieById?.data.genres.map(({ id, name }: ItemI) => (\n                        <Genre key={id}>{name.toLowerCase()}</Genre>\n                      ))}\n                    </WrapperGenre>\n                  ) : (\n                    <Skeleton variant=\"text\" width={150} height={26} />\n                  )}\n\n                  {!isLoadingMovieById &&\n                  !isFetchingMovieById &&\n                  movieById?.data.release_date ? (\n                    <InfoName>\n                      Release date:{' '}\n                      <InfoValue>{movieById.data.release_date}</InfoValue>\n                    </InfoName>\n                  ) : (\n                    <Skeleton variant=\"text\" width={200} height={32} />\n                  )}\n                  {!isLoadingMovieById &&\n                  !isFetchingMovieById &&\n                  movieById?.data.tagline ? (\n                    <InfoName>\n                      Tagline: <InfoValue>{movieById.data.tagline}</InfoValue>\n                    </InfoName>\n                  ) : (\n                    <Skeleton variant=\"text\" width={300} height={32} />\n                  )}\n                  {!isLoadingMovieById &&\n                  !isFetchingMovieById &&\n                  movieById?.data.overview ? (\n                    <InfoName>\n                      <InfoValue>{movieById.data.overview}</InfoValue>\n                    </InfoName>\n                  ) : (\n                    <Skeleton variant=\"text\" width=\"100%\" height={255} />\n                  )}\n                  {!isLoadingMovieById &&\n                  !isFetchingMovieById &&\n                  movieById?.data.vote_count > 0 ? (\n                    <InfoName>\n                      <Rating\n                        value={movieById?.data.vote_average}\n                        precision={0.1}\n                        readOnly\n                        max={10}\n                      />\n                    </InfoName>\n                  ) : (\n                    <Skeleton variant=\"text\" width={300} height={40} />\n                  )}\n                  {!isLoadingMovieById &&\n                  !isFetchingMovieById &&\n                  !!movieById?.data.production_companies.length ? (\n                    <>\n                      <InfoName>Prodaction companies:</InfoName>\n                      <LogoList>\n                        {movieById.data.production_companies.map(\n                          ({ id, name }: ItemI) => (\n                            <Logo key={id}>{name}</Logo>\n                          )\n                        )}\n                      </LogoList>\n                    </>\n                  ) : (\n                    <Skeleton variant=\"text\" width={100} height={60} />\n                  )}\n                </Info>\n              </WrapperInfo>\n            </Container>\n          </BackdropInfo>\n\n          <Container>\n            <Wrapper>\n              {!!movieCast?.data.cast.length && !isFetchingMovieCast && (\n                <BoxCast cast={movieCast} title=\"Cast and crew\" />\n              )}\n\n              <WrapperMedia>\n                {movieVideo?.data?.results[0]?.key && !isFetchingMovieVideo && (\n                  <WrapperVideo>\n                    <Iframe\n                      src={`https://www.youtube-nocookie.com/embed/${movieVideo?.data.results[0].key}`}\n                      frameBorder=\"0\"\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen\n                      title=\"Embedded youtube\"\n                    />\n                  </WrapperVideo>\n                )}\n\n                {!isFetchingReviewsMovies &&\n                  !isFetchingMovieImages &&\n                  movieImages &&\n                  reviewsMovie && (\n                    <>\n                      <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        aria-label=\"icon label tabs example\"\n                      >\n                        <Tab\n                          style={{ color: '#fff' }}\n                          icon={<MdReviews />}\n                          label=\"REVIEWS\"\n                          {...a11yProps(0)}\n                        />\n                        {!!movieImages?.data.backdrops.length && (\n                          <Tab\n                            style={{ color: '#fff' }}\n                            icon={<IoMdPhotos />}\n                            label=\"POSTERS\"\n                            {...a11yProps(1)}\n                          />\n                        )}\n                      </Tabs>\n                      <TabPanel value={value} index={0}>\n                        {!!reviewsMovie?.data.results.length ? (\n                          <ListReviews>\n                            {reviewsMovie.data.results.map(\n                              ({\n                                id,\n                                author,\n                                content,\n                                author_details,\n                              }: ReviewI) => (\n                                <li key={id}>\n                                  <InfoReview>\n                                    <AvatarRewiew>\n                                      <img\n                                        src={\n                                          author_details.avatar_path?.includes(\n                                            'http'\n                                          )\n                                            ? author_details.avatar_path?.substring(\n                                                1\n                                              )\n                                            : author_details.avatar_path\n                                            ? `https://image.tmdb.org/t/p/w500/${author_details.avatar_path}`\n                                            : noPhoto\n                                        }\n                                        alt={author}\n                                        width=\"50px\"\n                                      />\n                                    </AvatarRewiew>\n                                    <NameReview>{author}</NameReview>\n                                  </InfoReview>\n                                  <Review>{content}</Review>\n                                </li>\n                              )\n                            )}\n                          </ListReviews>\n                        ) : (\n                          <NoReviews>No reviews</NoReviews>\n                        )}\n                      </TabPanel>\n\n                      <TabPanel value={value} index={1}>\n                        {movieImages && (\n                          <ImageList\n                            sx={{ width: '100%', height: 500 }}\n                            cols={3}\n                          >\n                            {movieImages.data.backdrops.map(\n                              ({ file_path }: MovieImagesI) => (\n                                <ImageListItem key={file_path}>\n                                  <img\n                                    src={`https://image.tmdb.org/t/p/w500/${file_path}`}\n                                    alt={movieById?.data.original_title}\n                                    loading=\"lazy\"\n                                  />\n                                </ImageListItem>\n                              )\n                            )}\n                          </ImageList>\n                        )}\n                      </TabPanel>\n                    </>\n                  )}\n              </WrapperMedia>\n              {!!movieSimilar?.data.results.length &&\n                !isFetchingMoviesSimilar && (\n                  <BoxMovie\n                    isLoading={isLoadingSimilarMovies}\n                    movies={movieSimilar}\n                    title=\"Similar movies\"\n                  />\n                )}\n            </Wrapper>\n          </Container>\n        </>\n      ) : (\n        <WrappperNotFound>\n          <h1>Not found movie</h1>\n        </WrappperNotFound>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieById } from '../services/movies-services';\n\nexport const useMovieById = (id: string) => {\n  const {\n    data: movieById,\n    refetch: refetchMovieById,\n    isFetching: isFetchingMovieById,\n    isLoading: isLoadingMovieById,\n    isError: isErrorMovieById,\n  } = useQuery('movie by id', () => getMovieById(id), {\n    onError: (error: any) => {\n      toast.error('Not found movie');\n    },\n  });\n\n  return {\n    movieById,\n    refetchMovieById,\n    isFetchingMovieById,\n    isLoadingMovieById,\n    isErrorMovieById,\n  };\n};\n","import { useQuery } from 'react-query';\nimport { getMovieVideoById } from '../services/movies-services';\n\nexport const useMovieVideoById = (id: string) => {\n  const {\n    data: movieVideo,\n    refetch: refetchMovieVideo,\n    isFetching: isFetchingMovieVideo,\n  } = useQuery('movie video', () => getMovieVideoById(id));\n\n  return { movieVideo, refetchMovieVideo, isFetchingMovieVideo };\n};\n","import { useQuery } from 'react-query';\nimport { getMovieSimilar } from '../services/movies-services';\n\nexport const useMovieSimilar = (id: string) => {\n  const {\n    data: movieSimilar,\n    refetch: refetchMoviesSimilar,\n    isFetching: isFetchingMoviesSimilar,\n    isLoading: isLoadingSimilarMovies,\n  } = useQuery('movie somilar', () => getMovieSimilar(id));\n  return {\n    movieSimilar,\n    refetchMoviesSimilar,\n    isFetchingMoviesSimilar,\n    isLoadingSimilarMovies,\n  };\n};\n","import { useQuery } from 'react-query';\nimport { getMovieCast } from '../services/movies-services';\n\nexport const useMovieCast = (id: string) => {\n  const {\n    data: movieCast,\n    refetch: refetchMovieCast,\n    isFetching: isFetchingMovieCast,\n  } = useQuery('movie cast', () => getMovieCast(id));\n\n  return { movieCast, refetchMovieCast, isFetchingMovieCast };\n};\n","import { useQuery } from 'react-query';\nimport { getReviewsMovie } from '../services/movies-services';\n\nexport const useReviewsMovies = (id: string) => {\n  const {\n    data: reviewsMovie,\n    refetch: refetchReviewsMovies,\n    isFetching: isFetchingReviewsMovies,\n  } = useQuery('reviews movie', () => getReviewsMovie(id));\n\n  return { reviewsMovie, refetchReviewsMovies, isFetchingReviewsMovies };\n};\n","import { useQuery } from 'react-query';\nimport { getImagesMovie } from '../services/movies-services';\n\nexport const useMovieImages = (id: string) => {\n  const {\n    data: movieImages,\n    refetch: refetchMovieImages,\n    isFetching: isFetchingMovieImages,\n  } = useQuery('movie images', () => getImagesMovie(id));\n\n  return { movieImages, refetchMovieImages, isFetchingMovieImages };\n};\n","import slugify from 'slugify';\n\nexport const makeSlug = (string: string) => slugify(string, { lower: true });\n","export const sliderSettingsForBoxCast = {\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 7,\n  slidesToShow: 7,\n  swipeToSlide: true,\n  draggable: false,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        draggable: true,\n      },\n    },\n  ],\n};\n\nexport const sliderSettingsForBoxMovie = {\n  draggable: false,\n  speed: 500,\n  slidesToScroll: 5,\n  slidesToShow: 5,\n  swipeToSlide: true,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToScroll: 4,\n        slidesToShow: 4,\n      },\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToScroll: 2,\n        slidesToShow: 2,\n        draggable: true,\n      },\n    },\n  ],\n};\n\nexport const sliderSettingsForHero = {\n  dots: true,\n  infinite: true,\n  speed: 900,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  arrows: false,\n  adaptiveHeight: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n};\n\nexport const sliderSettingsForPersonDetails = {\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 5,\n  draggable: false,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        draggable: true,\n      },\n    },\n  ],\n};\n","export default function makeIdFromSlug(slug: any) {\n  return slug.match(/[a-z0-9]+$/)[0];\n}\n"],"names":["KEY","axios","getTrendingMovies","page","params","api_key","getPopularMovies","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Section","styled","Wrapper","Title","LinkStyled","Link","isLoading","movies","title","path","Container","Skeleton","variant","width","height","to","sliderSettingsForBoxMovie","data","results","map","original_title","original_name","poster_path","release_date","first_air_date","pathname","makeSlug","ItemMovie","src","date","Item","Poster","Backdrop","Date","Name","noPoster","alt","size","cast","sliderSettingsForBoxCast","profile_path","noPhoto","BackdropInfo","props","$backdrop","WrapperInfo","Info","WrapperGenre","Genre","InfoName","InfoValue","LogoList","Logo","WrapperMedia","WrapperVideo","Iframe","ListReviews","InfoReview","AvatarRewiew","NameReview","Review","NoReviews","WrappperNotFound","TabPanel","children","value","index","other","role","hidden","a11yProps","useState","setValue","location","useLocation","makeIdFromSlug","useQuery","onError","error","toast","movieById","refetchMovieById","refetch","isFetchingMovieById","isFetching","isLoadingMovieById","isErrorMovieById","isError","useMovieById","movieVideo","refetchMovieVideo","isFetchingMovieVideo","useMovieVideoById","movieSimilar","refetchMoviesSimilar","isFetchingMoviesSimilar","isLoadingSimilarMovies","useMovieSimilar","movieCast","refetchMovieCast","isFetchingMovieCast","useMovieCast","reviewsMovie","refetchReviewsMovies","isFetchingReviewsMovies","useReviewsMovies","movieImages","refetchMovieImages","isFetchingMovieImages","useMovieImages","useEffect","window","scrollTo","backdrop_path","genres","toLowerCase","tagline","overview","vote_count","Rating","vote_average","precision","readOnly","max","production_companies","length","key","frameBorder","allow","allowFullScreen","Tabs","onChange","_","newValue","Tab","style","color","icon","label","backdrops","author","content","author_details","avatar_path","includes","substring","ImageList","sx","cols","file_path","ImageListItem","loading","BoxMovie","string","slugify","lower","infinite","speed","slidesToScroll","slidesToShow","swipeToSlide","draggable","responsive","breakpoint","settings","sliderSettingsForHero","dots","arrows","adaptiveHeight","autoplay","autoplaySpeed","sliderSettingsForPersonDetails","slug","match"],"sourceRoot":""}