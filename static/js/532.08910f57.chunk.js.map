{"version":3,"file":"static/js/532.08910f57.chunk.js","mappings":"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","sources":["api/hooks/usePopularMovies.ts","api/hooks/useRatedMovies.ts","api/hooks/useTrendingMovies.ts","api/hooks/useUpcomingMovies.ts","api/services/movies-services.ts","components/BoxMovie/BoxMovie.styles.ts","components/BoxMovie/index.tsx","components/ItemMovie/ItemMovie.styles.ts","components/ItemMovie/index.tsx","components/Hero/Hero.styles.ts","components/Hero/index.tsx","pages/Home/index.tsx","services/make-slug.ts","services/slider-settings.ts"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { getPopularMovies } from '../services/movies-services';\n\nexport const usePopularMovies = (page: number) => {\n  const {\n    data: popularMovies,\n    refetch: refetchPopularMovies,\n    isLoading: isLoadingPopularMovies,\n  } = useQuery('popular movies', () => getPopularMovies(page));\n  return { popularMovies, refetchPopularMovies, isLoadingPopularMovies };\n};\n","import { useQuery } from 'react-query';\nimport { getRatedMovies } from '../services/movies-services';\n\nexport const useRatedMovies = (page: number) => {\n  const {\n    data: ratedMovies,\n    refetch: refetchRatedMovies,\n    isLoading: isLoadingRatedMovies,\n  } = useQuery('rated movies', () => getRatedMovies(page));\n  return { ratedMovies, refetchRatedMovies, isLoadingRatedMovies };\n};\n","import { useQuery } from 'react-query';\nimport { getTrendingMovies } from '../services/movies-services';\n\nexport const useTrendingMovies = (page: number) => {\n  const {\n    data: trendingMovies,\n    refetch: refetchTrendingMovies,\n    isLoading: isLoadingTrendingMovies,\n  } = useQuery('trending movies', () => getTrendingMovies(page));\n\n  return { trendingMovies, refetchTrendingMovies, isLoadingTrendingMovies };\n};\n","import { useQuery } from 'react-query';\nimport { getUpcomingMovie } from '../services/movies-services';\n\nexport const useUpcomingMovies = (page: number) => {\n  const {\n    data: upcomingMovies,\n    refetch: refetchUpcomingMovies,\n    isLoading: isLoadingUpcomingMovie,\n  } = useQuery('upcoming movies', () => getUpcomingMovie(page));\n\n  return { upcomingMovies, refetchUpcomingMovies, isLoadingUpcomingMovie };\n};\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin-top: 40px;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 30%;\n  }\n\n  & .slick-next {\n    right: -12px;\n  }\n  & .slick-prev {\n    left: -12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 90px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 130px;\n    & .slick-arrow {\n      top: 40%;\n    }\n\n    & .slick-next {\n      right: -35px;\n    }\n    & .slick-prev {\n      left: -35px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 45px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 58px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto';\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 1.16;\n\n  @media screen and (min-width: 768px) {\n    font-size: 42px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 48px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.16;\n\n  color: #ffffff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport { Container } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport { makeSlug } from 'services/make-slug';\nimport { sliderSettingsForBoxMovie } from 'services/slider-settings';\nimport ItemMovie from 'components/ItemMovie';\nimport { Section, Wrapper, Title, LinkStyled } from './BoxMovie.styles';\n\ninterface BoxMovieProps {\n  isLoading: boolean;\n  movies: any;\n  title: string;\n  path?: string;\n}\n\ninterface Item {\n  id: number;\n  original_title: string;\n  original_name: string;\n  poster_path: string;\n  release_date: string;\n  first_air_date: string;\n}\n\nconst BoxMovie: FC<BoxMovieProps> = ({ isLoading, movies, title, path }) => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          {!isLoading ? (\n            <Title>{title}</Title>\n          ) : (\n            <Skeleton variant=\"rectangular\" width={192} height={55} />\n          )}\n          {path && !isLoading && <LinkStyled to={path}>View all</LinkStyled>}\n          {isLoading && (\n            <Skeleton variant=\"rectangular\" width={68} height={23} />\n          )}\n        </Wrapper>\n        <Slider {...sliderSettingsForBoxMovie}>\n          {movies &&\n            movies?.data?.results.map(\n              ({\n                id,\n                original_title,\n                original_name,\n                poster_path,\n                release_date,\n                first_air_date,\n              }: Item) => (\n                <div key={id}>\n                  <Link\n                    to={{\n                      pathname: `/movies/all/${makeSlug(\n                        original_title || original_name\n                      )}-${id}`,\n                    }}\n                  >\n                    <ItemMovie\n                      src={poster_path}\n                      date={release_date || first_air_date}\n                      name={original_title || original_name}\n                    />\n                  </Link>\n                </div>\n              )\n            )}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default BoxMovie;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n    height: 280px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 10px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Name = styled.span`\n  margin-top: 4px;\n\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 6px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\nimport noPoster from '../../assets/not-found-poster.png';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <>\n      <Item>\n        <Poster>\n          <img\n            src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n            width=\"100%\"\n            alt={name}\n          />\n          <Backdrop>\n            <AiFillEye size=\"34px\" />\n          </Backdrop>\n        </Poster>\n        <Date>{date}</Date>\n        <Name>{name}</Name>\n      </Item>\n    </>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  height: 250px;\n\n  //react-slick classes\n  & .slick-dots {\n    bottom: 15px;\n  }\n\n  & .slick-dots li button:before {\n    font-size: 10px;\n\n    color: #ccc;\n  }\n  & .slick-dots li.slick-active button:before {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 400px;\n    & .slick-dots {\n      bottom: 35px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    height: 600px;\n  }\n`;\n\nexport const Container = styled.div`\n  margin: 0 auto;\n\n  height: 100%;\n  @media screen and (min-width: 1280px) {\n    max-width: 1800px;\n  }\n`;\n\nexport const Poster = styled.div`\n  height: 250px;\n\n  background-image: ${props =>\n    `url(https://image.tmdb.org/t/p/original${props.color})`};\n  background-size: cover;\n  background-position: center;\n\n  @media screen and (min-width: 768px) {\n    height: 400px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 600px;\n  }\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport { sliderSettingsForHero } from 'services/slider-settings';\nimport { useTrendingMovies } from 'api/hooks/useTrendingMovies';\nimport { Section, Container, Poster } from './Hero.styles';\n\ninterface ItemI {\n  id: number;\n  backdrop_path: string;\n}\n\nconst Hero: FC = () => {\n  const { trendingMovies, isLoadingTrendingMovies } = useTrendingMovies(1);\n\n  return (\n    <Section>\n      <Container>\n        {!isLoadingTrendingMovies && (\n          <Slider {...sliderSettingsForHero}>\n            {trendingMovies &&\n              trendingMovies.data.results\n                .slice(0, 3)\n                .map(({ id, backdrop_path }: ItemI) => (\n                  <div key={id}>\n                    <Poster color={backdrop_path}></Poster>\n                  </div>\n                ))}\n          </Slider>\n        )}\n        {isLoadingTrendingMovies && (\n          <Skeleton variant=\"rectangular\" width=\"100%\" height=\"100%\" />\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Hero;\n","import React, { FC, useEffect } from 'react';\n\nimport { usePopularMovies } from 'api/hooks/usePopularMovies';\nimport { useTrendingMovies } from 'api/hooks/useTrendingMovies';\nimport { useRatedMovies } from 'api/hooks/useRatedMovies';\nimport { useUpcomingMovies } from 'api/hooks/useUpcomingMovies';\n\nimport Hero from 'components/Hero';\nimport BoxMovie from 'components/BoxMovie';\n\nconst Home: FC = () => {\n  const { trendingMovies, isLoadingTrendingMovies } = useTrendingMovies(1);\n  const { popularMovies, isLoadingPopularMovies } = usePopularMovies(1);\n  const { ratedMovies, isLoadingRatedMovies } = useRatedMovies(1);\n  const { upcomingMovies, isLoadingUpcomingMovie } = useUpcomingMovies(1);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <Hero />\n      <BoxMovie\n        isLoading={isLoadingTrendingMovies}\n        movies={trendingMovies}\n        title=\"Trending\"\n        path=\"movies/trending\"\n      />\n      <BoxMovie\n        isLoading={isLoadingPopularMovies}\n        movies={popularMovies}\n        title=\"Popular\"\n        path=\"movies/popular\"\n      />\n      <BoxMovie\n        isLoading={isLoadingRatedMovies}\n        movies={ratedMovies}\n        title=\"Top rated\"\n        path=\"movies/top_rated\"\n      />\n      <BoxMovie\n        isLoading={isLoadingUpcomingMovie}\n        movies={upcomingMovies}\n        title=\"Upcoming\"\n        path=\"movies/upcoming\"\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import slugify from 'slugify';\n\nexport const makeSlug = (string: string) => slugify(string, { lower: true });\n","export const sliderSettingsForBoxCast = {\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 7,\n  slidesToShow: 7,\n  swipeToSlide: true,\n  draggable: false,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        draggable: true,\n      },\n    },\n  ],\n};\n\nexport const sliderSettingsForBoxMovie = {\n  draggable: false,\n  speed: 500,\n  slidesToScroll: 5,\n  slidesToShow: 5,\n  swipeToSlide: true,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToScroll: 2,\n        slidesToShow: 4,\n      },\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToScroll: 1,\n        slidesToShow: 2,\n        draggable: true,\n      },\n    },\n  ],\n};\n\nexport const sliderSettingsForHero = {\n  dots: true,\n  infinite: true,\n  speed: 900,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  arrows: false,\n  adaptiveHeight: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n};\n\nexport const sliderSettingsForPersonDetails = {\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 5,\n  draggable: false,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 2,\n      },\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        draggable: true,\n      },\n    },\n  ],\n};\n"],"names":["usePopularMovies","page","useQuery","getPopularMovies","popularMovies","data","refetchPopularMovies","refetch","isLoadingPopularMovies","isLoading","useRatedMovies","getRatedMovies","ratedMovies","refetchRatedMovies","isLoadingRatedMovies","useTrendingMovies","getTrendingMovies","trendingMovies","refetchTrendingMovies","isLoadingTrendingMovies","useUpcomingMovies","getUpcomingMovie","upcomingMovies","refetchUpcomingMovies","isLoadingUpcomingMovie","KEY","axios","params","api_key","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Section","styled","Wrapper","Title","LinkStyled","Link","movies","title","path","Container","Skeleton","variant","width","height","to","sliderSettingsForBoxMovie","results","map","original_title","original_name","poster_path","release_date","first_air_date","pathname","makeSlug","ItemMovie","src","date","Item","Poster","Backdrop","Date","Name","noPoster","alt","size","props","color","sliderSettingsForHero","slice","backdrop_path","useEffect","window","scrollTo","BoxMovie","string","slugify","lower","sliderSettingsForBoxCast","infinite","speed","slidesToScroll","slidesToShow","swipeToSlide","draggable","responsive","breakpoint","settings","dots","arrows","adaptiveHeight","autoplay","autoplaySpeed","sliderSettingsForPersonDetails"],"sourceRoot":""}