{"version":3,"file":"static/js/918.d7386d6e.chunk.js","mappings":"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","sources":["api/services/movies.services.ts","components/ItemMovie/ItemMovie.style.js","components/ItemMovie/ItemMovie.tsx","pages/Movies/Movies.style.js","pages/Movies/Movies.tsx","api/hooks/useMoviesByName.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularTv = async () => {\n  return await axios('/tv/popular', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  width: 200px;\n  height: 280px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: ${props => props.color};\n`;\n\nexport const Date = styled.span`\n  margin-top: 18px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n`;\n\nexport const Name = styled.span`\n  margin-top: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n\n  color: #fff;\n`;\n","import React, { FC } from 'react';\n\nimport { Item, Poster, Date, Name } from './ItemMovie.style';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${src}`}\n          width=\"100%\"\n          alt={name}\n        />\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 80px 0;\n\n  /* background-color: #333; */\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n\n  font-size: 22px;\n\n  &::after {\n    position: absolute;\n    top: 100%;\n    content: '';\n    display: block;\n    height: 1px;\n    width: 110%;\n\n    background-color: #fff;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n\n  border: none;\n  outline: none;\n  color: #fff;\n  background-color: transparent;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 18px;\n\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  margin: -5px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  margin: 5px;\n\n  width: calc((100% - 50px) / 5);\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useMoviesByName } from 'api/hooks/useMoviesByName.ts';\nimport { Container } from '@mui/material';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nimport ItemMovie from 'components/ItemMovie';\nimport {\n  Wrapper,\n  Form,\n  Label,\n  Input,\n  Button,\n  InfoText,\n  List,\n  Item,\n} from './Movies.style';\n\nconst Movie = () => {\n  const [value, setValue] = useState('');\n  const { moviesByName, refetch } = useMoviesByName(value);\n\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (searchParam) setValue(searchParam);\n  }, [searchParam]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) {\n      toast.info('Please input text');\n      return;\n    }\n    navigation({ ...location, search: `query=${value}` });\n    refetch();\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <Input\n              placeholder=\"Search movies\"\n              value={value}\n              onChange={handleChange}\n            />\n          </Label>\n          <Button type=\"submit\">\n            <AiOutlineSearch color=\"#fff\" size=\"24px\" />\n          </Button>\n        </Form>\n        <InfoText>\n          {moviesByName?.data.total_results}{' '}\n          {moviesByName?.data.total_results > 1 ? 'movies' : 'movie'} found for\n          your query\n        </InfoText>\n        {moviesByName && (\n          <List>\n            {moviesByName?.data.results.map(movie => (\n              <Item key={movie.id}>\n                <ItemMovie\n                  src={movie.poster_path}\n                  date={movie.release_date || movie.first_air_date}\n                  name={movie.original_title || movie.original_name}\n                />\n              </Item>\n            ))}\n          </List>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Movie;\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMoviesByName } from 'api/services/movies.services.ts';\n\nexport const useMoviesByName = (name: string) => {\n  const { data: moviesByName, refetch } = useQuery(\n    'movies by name',\n    () => getMoviesByName(name),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n      enabled: false,\n    }\n  );\n\n  return { moviesByName, refetch };\n};\n"],"names":["KEY","axios","getTrendingMovies","page","params","api_key","getPopularMovies","getPopularTv","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","Item","styled","Poster","props","color","Date","Name","src","date","width","alt","Wrapper","Form","Label","Input","Button","InfoText","List","useState","value","setValue","useQuery","onError","error","toast","message","enabled","moviesByName","data","refetch","useMoviesByName","navigation","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","useEffect","Container","onSubmit","e","preventDefault","placeholder","onChange","target","type","size","total_results","results","map","movie","ItemMovie","poster_path","release_date","first_air_date","original_title","original_name"],"sourceRoot":""}