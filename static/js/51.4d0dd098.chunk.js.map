{"version":3,"file":"static/js/51.4d0dd098.chunk.js","mappings":"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","sources":["api/services/movies.services.ts","components/BoxMovie/BoxMovie.styles.js","components/BoxMovie/BoxMovie.tsx","components/ItemMovie/ItemMovie.styles.js","components/ItemMovie/ItemMovie.tsx","components/BoxCast/BoxCast.styles.js","components/BoxCast/BoxCast.tsx","pages/MovieDetails/MovieDetails.styles.js","pages/MovieDetails/MovieDetails.tsx","api/hooks/useMovieById.ts","api/hooks/useMovieVideoById.ts","api/hooks/useMovieSimilar.ts","api/hooks/useMovieCast.ts","api/hooks/useReviewsMovie.ts","api/hooks/useMovieImages.ts","services/slug.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin-top: 40px;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 30%;\n  }\n\n  & .slick-next {\n    right: -12px;\n  }\n  & .slick-prev {\n    left: -12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 90px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 130px;\n    & .slick-arrow {\n      top: 40%;\n    }\n\n    & .slick-next {\n      right: -35px;\n    }\n    & .slick-prev {\n      left: -35px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 45px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 58px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto';\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 1.16;\n\n  @media screen and (min-width: 768px) {\n    font-size: 42px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 48px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.16;\n\n  color: #ffffff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport slugify from 'slugify';\n\nimport { Container } from '@mui/material';\n\nimport ItemMovie from 'components/ItemMovie/ItemMovie.tsx';\nimport { Section, Wrapper, Title, LinkStyled } from './BoxMovie.styles';\n\ninterface BoxMovieProps {\n  title: string;\n  path: string;\n}\n\n// settings for react-slick\nconst settings = {\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 5,\n  swipeToSlide: true,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToShow: 4,\n      },\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n      },\n    },\n  ],\n};\n//make slug for pathname\nconst makeSlug = (string: string) => slugify(string, { lower: true });\n\nconst BoxMovie: FC<BoxMovieProps> = ({ movies, title, path }) => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <Title>{title}</Title>\n          {path && <LinkStyled to={path}>View all</LinkStyled>}\n        </Wrapper>\n        <Slider {...settings}>\n          {movies &&\n            movies?.data?.results.map(movie => (\n              <div key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/all/${makeSlug(\n                      movie.original_title || movie.original_name\n                    )}-${movie.id}`,\n                  }}\n                >\n                  <ItemMovie\n                    src={movie.poster_path}\n                    date={movie.release_date || movie.first_air_date}\n                    name={movie.original_title || movie.original_name}\n                  />\n                </Link>\n              </div>\n            ))}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default BoxMovie;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 140px;\n  height: 210px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n    height: 280px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 10px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Name = styled.span`\n  margin-top: 4px;\n\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 6px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\n\nimport noPoster from '../../assets/not-found-poster.png';\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n          width=\"100%\"\n          alt={name}\n        />\n        <Backdrop>\n          <AiFillEye size=\"34px\" />\n        </Backdrop>\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 40%;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 10px 0;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 138px;\n  height: 207px;\n  margin-bottom: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n  border-radius: 10px;\n  background-color: #111;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Name = styled.span`\n  font-size: 14px;\n\n  text-align: center;\n  color: #fff;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 480px) {\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport slugify from 'slugify';\n\nimport { AiFillEye } from 'react-icons/ai';\nimport { Container } from '@mui/material';\n\nimport noPhoto from 'assets/no_photo.png';\nimport {\n  Wrapper,\n  Title,\n  Item,\n  Name,\n  Poster,\n  Backdrop,\n} from 'components/BoxCast/BoxCast.styles';\n\n// settings for react-slick\nconst settings = {\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 7,\n  swipeToSlide: true,\n  responsive: [\n    {\n      breakpoint: 1080,\n      settings: {\n        slidesToShow: 4,\n      },\n    },\n    {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 3,\n      },\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 2,\n      },\n    },\n  ],\n};\n//make slug for pathname\nconst makeSlug = (string: string) => slugify(string, { lower: true });\n\nconst BoxCast = ({ cast, title }) => {\n  return (\n    <Container>\n      <Wrapper>\n        <Title>{title}</Title>\n\n        <Slider {...settings}>\n          {cast &&\n            cast?.data?.cast.map(actor => (\n              <div key={actor.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/person/${makeSlug(\n                      actor.name || actor.original_name\n                    )}-${actor.id}`,\n                  }}\n                >\n                  <Item>\n                    <Poster>\n                      <img\n                        src={\n                          actor.profile_path\n                            ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                            : noPhoto\n                        }\n                        width=\"100%\"\n                        alt={actor.name || actor.original_name}\n                      />\n                      <Backdrop>\n                        <AiFillEye size=\"38px\" />\n                      </Backdrop>\n                    </Poster>\n                    <Name>{actor.name || actor.original_name}</Name>\n                  </Item>\n                </Link>\n              </div>\n            ))}\n        </Slider>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxCast;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px 0 0 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 50px 0 0 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 50px 0 0 0;\n  Ъ\n`;\n\nexport const BackdropInfo = styled.div`\n  margin: 20px auto;\n  padding: 10px 0;\n\n  display: flex;\n  align-items: center;\n  background-color: #222;\n  background-image: ${props =>\n    props.img\n      ? `linear-gradient(83deg, rgba(0,0,0,0.6674019949776786) 0%, rgba(0,0,0,0.7486344879748774) 100%),url(https://image.tmdb.org/t/p/original/${props.img})`\n      : 'none'};\n\n  background-size: cover;\n\n  @media screen and (min-width: 768px) {\n    padding: 0;\n    margin: 30px auto;\n    height: 500px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: 40px auto;\n    height: 750px;\n    max-width: 2100px;\n  }\n`;\n\nexport const WrapperInfo = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const Poster = styled.div`\n  width: 300px;\n  height: 420px;\n  margin: 0 auto 10px;\n  flex-shrink: 0;\n\n  overflow: hidden;\n  border-radius: 10px;\n  background-color: #111;\n  @media screen and (min-width: 480px) {\n    width: 300px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0;\n    height: 450px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 450px;\n    height: 650px;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    padding-left: 15px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n\n  text-align: center;\n  font-size: 28px;\n  font-family: 'DM Sans';\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Genre = styled.span`\n  padding: 5px 10px;\n\n  border-radius: 10px;\n  background-color: #555;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const InfoName = styled.span`\n  margin-top: 6px;\n\n  font-size: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n\n    font-size: 22px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 10px;\n\n    font-size: 24px;\n  }\n`;\n\nexport const InfoValue = styled.span`\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const LogoList = styled.ul`\n  margin: 6px -6px -6px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) {\n    margin: 10px -10px -10px;\n  }\n`;\n\nexport const Logo = styled.li`\n  padding: 5px;\n  margin: 10px;\n\n  font-size: 16px;\n\n  border: 1px solid #fff;\n\n  @media screen and (min-width: 768px) {\n    margin: 6px;\n\n    font-size: 18px;\n  }\n`;\n\nexport const WrapperMedia = styled.div`\n  margin-top: 35px;\n\n  color: #000;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 50px;\n  }\n`;\n\nexport const WrapperVideo = styled.div`\n  margin-bottom: 15px;\n\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Iframe = styled.iframe`\n  width: 100%;\n  height: 300px;\n  @media screen and (min-width: 480px) {\n    height: 400px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 853px;\n    height: 480px;\n  }\n`;\n\nexport const ListReviews = styled.ul`\n  height: 500px;\n  padding: 0 10px;\n\n  overflow-y: scroll;\n\n  color: #fff;\n`;\n\nexport const ItemReview = styled.li``;\n\nexport const InfoReview = styled.div`\n  padding: 5px 0;\n  position: sticky;\n  top: 0;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n\n  background-color: #111;\n`;\n\nexport const AvatarRewiew = styled.div`\n  width: 50px;\n  height: 50px;\n  margin-right: 15px;\n\n  overflow: hidden;\n\n  border-radius: 50%;\n  background-color: #111;\n`;\n\nexport const NameReview = styled.span`\n  font-size: 24px;\n\n  @media screen and (min-width: 480px) {\n    font-size: 26px;\n  }\n`;\n\nexport const Review = styled.p`\n  font-size: 16px;\n\n  &:first-child {\n    padding: 60px;\n  }\n`;\n\nexport const NoReviews = styled.p`\n  padding: 15px;\n\n  font-size: 26px;\n  color: #fff;\n`;\n","import React, { useEffect, useState, ReactNode } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Container } from '@mui/material';\nimport Rating from '@mui/material/Rating';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport { MdReviews } from 'react-icons/md';\nimport { IoMdPhotos } from 'react-icons/io';\n\nimport noPhoto from 'assets/no_photo.png';\nimport noPoster from '../../assets/not-found-poster.png';\nimport { useMovieImages } from 'api/hooks/useMovieImages.ts';\nimport { useReviewsMovies } from 'api/hooks/useReviewsMovie.ts';\nimport { useMovieCast } from 'api/hooks/useMovieCast.ts';\nimport { useMovieSimilar } from 'api/hooks/useMovieSimilar.ts';\nimport { useMovieById } from 'api/hooks/useMovieById.ts';\nimport { useMovieVideoById } from 'api/hooks/useMovieVideoById.ts';\nimport BoxMovie from 'components/BoxMovie';\nimport BoxCast from 'components/BoxCast';\nimport makeIdFromSlug from 'services/slug.ts';\nimport {\n  Wrapper,\n  Title,\n  Poster,\n  WrapperInfo,\n  Info,\n  Genre,\n  InfoName,\n  InfoValue,\n  Logo,\n  LogoList,\n  WrapperMedia,\n  BackdropInfo,\n  ListReviews,\n  ItemReview,\n  AvatarRewiew,\n  NameReview,\n  Review,\n  WrapperVideo,\n  InfoReview,\n  NoReviews,\n  Iframe,\n} from './MovieDetails.styles';\n\ninterface TabPanelProps {\n  children?: ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\nconst a11yProps = (index: number) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n};\n\nconst MovieDetails = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (_, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const location = useLocation();\n  const id = makeIdFromSlug(location.pathname);\n\n  const { movieById, refetchMovieById, isFetchingMovieById } = useMovieById(id);\n  const { movieVideo, refetchMovieVideo, isFetchingMovieVideo } =\n    useMovieVideoById(id);\n  const { movieSimilar, refetchMoviesSimilar, isFetchingMoviesSimilar } =\n    useMovieSimilar(id);\n  const { movieCast, isFetchingMovieCast } = useMovieCast(id);\n  const { reviewsMovie, isFetchingReviewsMovies } = useReviewsMovies(id);\n  const { movieImages, isFetchingMovieImages } = useMovieImages(id);\n\n  useEffect(() => {\n    refetchMovieById();\n    refetchMoviesSimilar();\n    refetchMovieVideo();\n    window.scrollTo(0, 0);\n  }, [location, refetchMovieById, refetchMoviesSimilar, refetchMovieVideo]);\n\n  return (\n    <>\n      {movieById && !isFetchingMovieById && (\n        <BackdropInfo img={movieById.data.backdrop_path}>\n          <Container>\n            <WrapperInfo>\n              <Poster>\n                <img\n                  src={\n                    movieById.data.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movieById.data.poster_path}`\n                      : noPoster\n                  }\n                  alt={movieById?.data.original_title}\n                  width=\"100%\"\n                />\n              </Poster>\n              <Info>\n                <Title>{movieById.data.original_title}</Title>\n\n                <WrapperInfo>\n                  {movieById.data.genres.map((item, index) => (\n                    <Genre key={index}>{item.name.toLowerCase()}</Genre>\n                  ))}\n                </WrapperInfo>\n\n                <InfoName>\n                  Release date:{' '}\n                  <InfoValue>{movieById.data.release_date}</InfoValue>\n                </InfoName>\n                {movieById?.data.tagline && (\n                  <InfoName>\n                    Tagline: <InfoValue>{movieById.data.tagline}</InfoValue>\n                  </InfoName>\n                )}\n                <InfoName>\n                  <InfoValue>{movieById.data.overview}</InfoValue>\n                </InfoName>\n                <InfoName>\n                  <Rating\n                    value={movieById.data.vote_average}\n                    precision={0.1}\n                    readOnly\n                    max={10}\n                  />\n                </InfoName>\n                {!!movieById?.data.production_companies.length && (\n                  <>\n                    <InfoName>Prodaction companies:</InfoName>\n                    <LogoList>\n                      {movieById.data.production_companies.map(\n                        (item, index) => (\n                          <Logo key={index}>{item.name}</Logo>\n                        )\n                      )}\n                    </LogoList>\n                  </>\n                )}\n              </Info>\n            </WrapperInfo>\n          </Container>\n        </BackdropInfo>\n      )}\n\n      <Container>\n        <Wrapper>\n          {movieCast && !isFetchingMovieCast && (\n            <BoxCast cast={movieCast} title=\"Cast and crew\" />\n          )}\n\n          <WrapperMedia>\n            {movieVideo?.data?.results[0]?.key && !isFetchingMovieVideo && (\n              <WrapperVideo>\n                <Iframe\n                  src={`https://www.youtube-nocookie.com/embed/${movieVideo?.data.results[0].key}`}\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                  title=\"Embedded youtube\"\n                />\n              </WrapperVideo>\n            )}\n\n            {!isFetchingReviewsMovies &&\n              !isFetchingMovieImages &&\n              movieImages &&\n              reviewsMovie && (\n                <>\n                  <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"icon label tabs example\"\n                  >\n                    <Tab\n                      style={{ color: '#fff' }}\n                      icon={<MdReviews />}\n                      label=\"REVIEWS\"\n                      {...a11yProps(0)}\n                    />\n                    {!!movieImages?.data.posters.length && (\n                      <Tab\n                        style={{ color: '#fff' }}\n                        icon={<IoMdPhotos />}\n                        label=\"POSTERS\"\n                        {...a11yProps(1)}\n                      />\n                    )}\n                  </Tabs>\n                  <TabPanel value={value} index={0}>\n                    {!!reviewsMovie?.data.results.length ? (\n                      <ListReviews>\n                        {reviewsMovie.data.results.map(review => (\n                          <ItemReview key={review.id}>\n                            <InfoReview>\n                              <AvatarRewiew>\n                                <img\n                                  src={\n                                    review.author_details.avatar_path?.includes(\n                                      'http'\n                                    )\n                                      ? review.author_details.avatar_path?.substring(\n                                          1\n                                        )\n                                      : review.author_details.avatar_path\n                                      ? `https://image.tmdb.org/t/p/w500/${review.author_details.avatar_path}`\n                                      : noPhoto\n                                  }\n                                  alt={review.author}\n                                  width=\"50px\"\n                                />\n                              </AvatarRewiew>\n                              <NameReview>{review.author}</NameReview>\n                            </InfoReview>\n                            <Review>{review.content}</Review>\n                          </ItemReview>\n                        ))}\n                      </ListReviews>\n                    ) : (\n                      <NoReviews>No reviews</NoReviews>\n                    )}\n                  </TabPanel>\n\n                  <TabPanel value={value} index={1}>\n                    {movieImages && (\n                      <ImageList sx={{ width: '100%', height: 500 }} cols={3}>\n                        {movieImages.data.posters.map(image => (\n                          <ImageListItem key={image.file_path}>\n                            <img\n                              src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                              alt={movieById?.data.original_title}\n                              loading=\"lazy\"\n                            />\n                          </ImageListItem>\n                        ))}\n                      </ImageList>\n                    )}\n                  </TabPanel>\n                </>\n              )}\n          </WrapperMedia>\n          {movieSimilar && !isFetchingMoviesSimilar && (\n            <BoxMovie movies={movieSimilar} title=\"Similar movies\" path=\"/\" />\n          )}\n        </Wrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieById } from 'api/services/movies.services.ts';\n\nexport const useMovieById = id => {\n  const {\n    data: movieById,\n    refetch: refetchMovieById,\n    isFetching: isFetchingMovieById,\n  } = useQuery('movie by id', () => getMovieById(id), {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n\n  return {\n    movieById,\n    refetchMovieById,\n    isFetchingMovieById,\n  };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieVideoById } from 'api/services/movies.services.ts';\n\nexport const useMovieVideoById = id => {\n  const {\n    data: movieVideo,\n    refetch: refetchMovieVideo,\n    isFetching: isFetchingMovieVideo,\n  } = useQuery('movie video', () => getMovieVideoById(id), {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n\n  return { movieVideo, refetchMovieVideo, isFetchingMovieVideo };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieSimilar } from 'api/services/movies.services.ts';\n\nexport const useMovieSimilar = id => {\n  const {\n    data: movieSimilar,\n    refetch: refetchMoviesSimilar,\n    isFetching: isFetchingMoviesSimilar,\n  } = useQuery('movie somilar', () => getMovieSimilar(id), {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n  return { movieSimilar, refetchMoviesSimilar, isFetchingMoviesSimilar };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getMovieCast } from 'api/services/movies.services.ts';\n\nexport const useMovieCast = (id: string) => {\n  const {\n    data: movieCast,\n    refetch: refetchMovieCast,\n    isFetching: isFetchingMovieCast,\n  } = useQuery('movie cast', () => getMovieCast(id), {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n\n  return { movieCast, refetchMovieCast, isFetchingMovieCast };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getReviewsMovie } from 'api/services/movies.services.ts';\n\nexport const useReviewsMovies = (id: string) => {\n  const {\n    data: reviewsMovie,\n    refetch: refetchReviewsMovies,\n    isFetching: isFetchingReviewsMovies,\n  } = useQuery('reviews movie', () => getReviewsMovie(id), {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n\n  return { reviewsMovie, refetchReviewsMovies, isFetchingReviewsMovies };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getImagesMovie } from 'api/services/movies.services.ts';\n\nexport const useMovieImages = (id: string) => {\n  const {\n    data: movieImages,\n    refetch: refetchMovieImages,\n    isFetching: isFetchingMovieImages,\n  } = useQuery('movie images', () => getImagesMovie(id), {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n\n  return { movieImages, refetchMovieImages, isFetchingMovieImages };\n};\n","export default function makeIdFromSlug(slug) {\n  return slug.match(/[a-z0-9]+$/)[0];\n}\n"],"names":["KEY","axios","getTrendingMovies","page","params","api_key","getPopularMovies","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Section","styled","Wrapper","Title","LinkStyled","Link","settings","infinite","speed","slidesToScroll","slidesToShow","swipeToSlide","responsive","breakpoint","movies","title","path","Container","to","data","results","map","movie","pathname","string","original_title","original_name","slugify","lower","ItemMovie","src","poster_path","date","release_date","first_air_date","Item","Poster","Backdrop","Date","Name","noPoster","width","alt","size","cast","actor","profile_path","noPhoto","BackdropInfo","props","img","WrapperInfo","Info","Genre","InfoName","InfoValue","LogoList","Logo","WrapperMedia","WrapperVideo","Iframe","ListReviews","ItemReview","InfoReview","AvatarRewiew","NameReview","Review","NoReviews","TabPanel","children","value","index","other","role","hidden","a11yProps","useState","setValue","location","useLocation","makeIdFromSlug","useQuery","onError","error","toast","message","movieById","refetchMovieById","refetch","isFetchingMovieById","isFetching","useMovieById","movieVideo","refetchMovieVideo","isFetchingMovieVideo","useMovieVideoById","movieSimilar","refetchMoviesSimilar","isFetchingMoviesSimilar","useMovieSimilar","movieCast","refetchMovieCast","isFetchingMovieCast","useMovieCast","reviewsMovie","refetchReviewsMovies","isFetchingReviewsMovies","useReviewsMovies","movieImages","refetchMovieImages","isFetchingMovieImages","useMovieImages","useEffect","window","scrollTo","backdrop_path","genres","item","toLowerCase","tagline","overview","Rating","vote_average","precision","readOnly","max","production_companies","length","key","frameBorder","allow","allowFullScreen","Tabs","onChange","_","newValue","Tab","style","color","icon","label","posters","review","author_details","avatar_path","includes","substring","author","content","ImageList","sx","height","cols","image","ImageListItem","file_path","loading","BoxMovie","slug","match"],"sourceRoot":""}