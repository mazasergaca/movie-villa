{"version":3,"file":"static/js/719.a76da977.chunk.js","mappings":"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","sources":["api/hooks/useRatedMovies.ts","api/services/movies-services.ts","components/BoxPage/BoxPage.styles.ts","components/BoxPage/index.tsx","components/ItemMovie/ItemMovie.styles.ts","components/ItemMovie/index.tsx","pages/TopRatedMovies/index.tsx","services/make-slug.ts"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { getRatedMovies } from '../services/movies-services';\n\nexport const useRatedMovies = (page: number) => {\n  const {\n    data: ratedMovies,\n    refetch: refetchRatedMovies,\n    isLoading: isLoadingRatedMovies,\n  } = useQuery('rated movies', () => getRatedMovies(page));\n  return { ratedMovies, refetchRatedMovies, isLoadingRatedMovies };\n};\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 30px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 0;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 50px 0;\n  }\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n`;\n\nexport const Page = styled.span`\n  margin-bottom: 10px;\n  margin-left: 5px;\n\n  display: inline-block;\n\n  font-size: 14px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 15px;\n    margin-left: 10px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Item = styled.li`\n  @media screen and (max-width: 479px) {\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 3) {\n      margin-bottom: 20px;\n    }\n\n    width: calc((100% - 10px) / 2);\n  }\n\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n    width: calc((100% - 15px) / 3);\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 4) {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: calc((100% - 40px) / 4);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 5) {\n      margin-bottom: 20px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 40px) / 5);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 6) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const WrapperPagination = styled.div`\n  display: flex;\n  justify-content: center;\n\n  & button {\n    color: #fff;\n  }\n`;\n\nexport const ButtonPagination = styled.button``;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@mui/material/Pagination';\nimport PaginationItem from '@mui/material/PaginationItem';\nimport { Container } from '@mui/material';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport { makeSlug } from '../../services/make-slug';\nimport ItemMovie from '../ItemMovie';\nimport {\n  Wrapper,\n  WrapperTitle,\n  Title,\n  Page,\n  List,\n  Item,\n  WrapperPagination,\n  ButtonPagination,\n} from './BoxPage.styles';\n\ninterface BoxPageProps {\n  isLoading?: boolean;\n  title?: string;\n  movies: any;\n  handleClick: (numberPage: number) => void;\n  page: number;\n}\n\ninterface ItemI {\n  id: number;\n  original_title: string;\n  original_name: string;\n  poster_path: string;\n  release_date: string;\n  first_air_date: string;\n}\n\nconst BoxPage: FC<BoxPageProps> = ({\n  isLoading,\n  title,\n  movies,\n  handleClick,\n  page,\n}) => {\n  return (\n    <Container>\n      <Wrapper>\n        {title && !isLoading ? (\n          <WrapperTitle>\n            <Title>{title}</Title>\n          </WrapperTitle>\n        ) : (\n          <WrapperTitle>\n            <Skeleton variant=\"rectangular\" width={180} height={50} />\n          </WrapperTitle>\n        )}\n        {!isLoading ? (\n          <Page>\n            Page {page} of {movies?.data.total_pages}\n          </Page>\n        ) : (\n          <Page>\n            <Skeleton variant=\"text\" width={95} height={18} />\n          </Page>\n        )}\n        <List>\n          {movies?.data.results.map(\n            ({\n              id,\n              original_title,\n              original_name,\n              poster_path,\n              release_date,\n              first_air_date,\n            }: ItemI) => (\n              <Item key={id}>\n                <Link\n                  to={{\n                    pathname: `/movies/all/${makeSlug(\n                      original_title || original_name\n                    )}-${id}`,\n                  }}\n                >\n                  <ItemMovie\n                    isLoading={isLoading}\n                    src={poster_path}\n                    date={release_date || first_air_date}\n                    name={original_title || original_name}\n                  />\n                </Link>\n              </Item>\n            )\n          )}\n        </List>\n        {!isLoading && (\n          <WrapperPagination>\n            <Pagination\n              count={movies?.data.total_pages}\n              size=\"small\"\n              variant=\"outlined\"\n              shape=\"rounded\"\n              color=\"secondary\"\n              renderItem={(item: any) => (\n                <PaginationItem\n                  component={ButtonPagination}\n                  {...item}\n                  onClick={() => handleClick(item.page)}\n                />\n              )}\n              page={page}\n            />\n          </WrapperPagination>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxPage;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n    height: 280px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 10px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Name = styled.span`\n  margin-top: 4px;\n\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 6px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\nimport Skeleton from '@mui/material/Skeleton';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\nimport noPoster from '../../assets/not-found-poster.png';\n\ninterface ItemMovieProps {\n  isLoading?: boolean;\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ isLoading, src, date, name }) => {\n  return (\n    <>\n      {!isLoading && (\n        <Item>\n          <Poster>\n            <img\n              src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n              width=\"100%\"\n              alt={name}\n            />\n            <Backdrop>\n              <AiFillEye size=\"34px\" />\n            </Backdrop>\n          </Poster>\n          <Date>{date}</Date>\n          <Name>{name}</Name>\n        </Item>\n      )}\n      {isLoading && (\n        <Item>\n          <Skeleton variant=\"rectangular\" width={200} height={280} />\n          <Skeleton variant=\"text\" width={64} height={15} />\n          <Skeleton variant=\"text\" width={112} height={23} />\n        </Item>\n      )}\n    </>\n  );\n};\n\nexport default ItemMovie;\n","import React, { useEffect, useState, FC } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport { useRatedMovies } from 'api/hooks/useRatedMovies';\nimport BoxPage from 'components/BoxPage';\n\nconst TopRatedMovies: FC = () => {\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('page');\n\n  const [page, setPage] = useState(Number(searchParam) || 1);\n\n  const { ratedMovies, refetchRatedMovies, isLoadingRatedMovies } =\n    useRatedMovies(page);\n\n  const handleClick = (page: number): void => {\n    setPage(page);\n    navigation({ ...location, search: `page=${page}` });\n  };\n\n  useEffect(() => {\n    refetchRatedMovies();\n    window.scrollTo(0, 0);\n  }, [page, refetchRatedMovies]);\n\n  return (\n    <BoxPage\n      isLoading={isLoadingRatedMovies}\n      title=\"Top rated\"\n      movies={ratedMovies}\n      handleClick={handleClick}\n      page={page}\n    />\n  );\n};\n\nexport default TopRatedMovies;\n","import slugify from 'slugify';\n\nexport const makeSlug = (string: string) => slugify(string, { lower: true });\n"],"names":["useRatedMovies","page","useQuery","getRatedMovies","ratedMovies","data","refetchRatedMovies","refetch","isLoadingRatedMovies","isLoading","KEY","axios","getTrendingMovies","params","api_key","getPopularMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Wrapper","styled","WrapperTitle","Title","Page","List","Item","WrapperPagination","ButtonPagination","title","movies","handleClick","Container","Skeleton","variant","width","height","total_pages","results","map","original_title","original_name","poster_path","release_date","first_air_date","to","pathname","makeSlug","ItemMovie","src","date","Pagination","count","size","shape","color","renderItem","item","PaginationItem","component","onClick","Poster","Backdrop","Date","Name","noPoster","alt","navigation","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","useState","Number","setPage","useEffect","window","scrollTo","string","slugify","lower"],"sourceRoot":""}