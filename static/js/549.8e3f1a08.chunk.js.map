{"version":3,"file":"static/js/549.8e3f1a08.chunk.js","mappings":"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","sources":["api/hooks/useTrendingMovies.ts","api/services/movies.services.ts","components/BoxPage/BoxPage.style.js","components/BoxPage/BoxPage.tsx","components/ItemMovie/ItemMovie.style.js","components/ItemMovie/ItemMovie.tsx","pages/TrendingMovies/TrendingMovies.tsx"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getTrendingMovies } from 'api/services/movies.services.ts';\n\nexport const useTrendingMovies = (page: number) => {\n  const { data: trendingMovies, refetch } = useQuery(\n    'trending movies',\n    () => getTrendingMovies(page),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { trendingMovies, refetch };\n};\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularTv = async () => {\n  return await axios('/tv/popular', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 50px 0;\n\n  // css class mui item\n  & .css-r93niq-MuiButtonBase-root-MuiPaginationItem-root {\n    color: #fff;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n\n  text-align: center;\n`;\n\nexport const Page = styled.p`\n  margin-bottom: 15px;\n  margin-left: 10px;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 40px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  /* margin: 5px; */\n\n  &:not(:nth-child(5n)) {\n    margin-right: 10px;\n  }\n\n  &:nth-last-child(n + 6) {\n    margin-bottom: 20px;\n  }\n\n  width: calc((100% - 40px) / 5);\n`;\n\nexport const WrapperPagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport slugify from 'slugify';\nimport { Link } from 'react-router-dom';\nimport { Container } from '@mui/material';\n\nimport ItemMovie from 'components/ItemMovie';\nimport {\n  Wrapper,\n  Title,\n  Page,\n  List,\n  Item,\n  WrapperPagination,\n} from './BoxPage.style';\n\n//make slug for pathname\nconst makeSlug = string => slugify(string, { lower: true });\n\nconst BoxPage = ({ title, movies, handleClick, page }) => {\n  return (\n    <Container>\n      <Wrapper>\n        <Title>{title}</Title>\n        <Page>\n          Page {movies?.data.page} of {movies?.data.total_pages}\n        </Page>\n        <List>\n          {movies?.data.results.map(movie => (\n            <Item key={movie.id}>\n              <Link\n                to={{\n                  pathname: `/movies/all/${makeSlug(\n                    movie.original_title || movie.original_name\n                  )}-${movie.id}`,\n                }}\n              >\n                <ItemMovie\n                  src={movie.poster_path}\n                  date={movie.release_date || movie.first_air_date}\n                  name={movie.original_title || movie.original_name}\n                />\n              </Link>\n            </Item>\n          ))}\n        </List>\n        <WrapperPagination>\n          <Pagination\n            count={movies?.data.total_pages}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            color=\"primary\"\n            onChange={e => handleClick(Number(e.target.textContent))}\n            page={page}\n          />\n        </WrapperPagination>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxPage;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  width: 200px;\n  height: 280px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: ${props => props.color};\n`;\n\nexport const Date = styled.span`\n  margin-top: 18px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n`;\n\nexport const Name = styled.span`\n  margin-top: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n\n  color: #fff;\n`;\n","import React, { FC } from 'react';\n\nimport { Item, Poster, Date, Name } from './ItemMovie.style';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${src}`}\n          width=\"100%\"\n          alt={name}\n        />\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport { useTrendingMovies } from 'api/hooks/useTrendingMovies.ts';\nimport BoxPage from 'components/BoxPage';\n\nconst Trending = () => {\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('page');\n\n  const [page, setPage] = useState(Number(searchParam) || 1);\n\n  const { trendingMovies, refetch } = useTrendingMovies(page);\n  console.log(trendingMovies);\n\n  const handleClick = (page: number) => {\n    setPage(page);\n    navigation({ ...location, search: `page=${page}` });\n  };\n\n  useEffect(() => {\n    refetch();\n    window.scrollTo(0, 0);\n  }, [page, refetch]);\n\n  return (\n    <BoxPage\n      title=\"Trending\"\n      movies={trendingMovies}\n      handleClick={handleClick}\n      page={page}\n    />\n  );\n};\n\nexport default Trending;\n"],"names":["useTrendingMovies","page","useQuery","getTrendingMovies","onError","error","toast","message","trendingMovies","data","refetch","KEY","axios","params","api_key","getPopularMovies","getPopularTv","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","Wrapper","styled","Title","Page","List","Item","WrapperPagination","title","movies","handleClick","Container","total_pages","results","map","movie","to","pathname","string","original_title","original_name","slugify","lower","ItemMovie","src","poster_path","date","release_date","first_air_date","Pagination","count","variant","shape","color","onChange","e","Number","target","textContent","Poster","props","Date","Name","width","alt","navigation","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","useState","setPage","console","log","useEffect","window","scrollTo","BoxPage"],"sourceRoot":""}