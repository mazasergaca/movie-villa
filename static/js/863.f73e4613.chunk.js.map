{"version":3,"file":"static/js/863.f73e4613.chunk.js","mappings":"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","sources":["api/hooks/usePopularMovies.ts","api/hooks/useRatedMovies.ts","api/hooks/useTrendingMovies.ts","api/hooks/useUpcomingMovies.ts","api/services/movies.services.ts","components/BoxMovie/BoxMovie.style.js","components/BoxMovie/BoxMovie.tsx","components/ItemMovie/ItemMovie.style.js","components/ItemMovie/ItemMovie.tsx","components/Hero/Hero.style.js","components/Hero/Hero.tsx","pages/Home/Home.tsx","api/hooks/usePopularTv.ts"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getPopularMovies } from 'api/services/movies.services.ts';\n\nexport const usePopularMovies = (page: number) => {\n  const { data: popularMovies, refetch } = useQuery(\n    'popular movies',\n    () => getPopularMovies(page),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n  return { popularMovies, refetch };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getRatedMovies } from 'api/services/movies.services.ts';\n\nexport const useRatedMovies = (page: number) => {\n  const { data: ratedMovies, refetch } = useQuery(\n    'rated movies',\n    () => getRatedMovies(page),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n  return { ratedMovies, refetch };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getTrendingMovies } from 'api/services/movies.services.ts';\n\nexport const useTrendingMovies = (page: number) => {\n  const { data: trendingMovies, refetch } = useQuery(\n    'trending movies',\n    () => getTrendingMovies(page),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { trendingMovies, refetch };\n};\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getUpcomingMovie } from 'api/services/movies.services.ts';\n\nexport const useUpcomingMovies = (page: number) => {\n  const { data: upcomingMovies, refetch } = useQuery(\n    'upcoming movies',\n    () => getUpcomingMovie(page),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { upcomingMovies, refetch };\n};\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularTv = async () => {\n  return await axios('/tv/popular', {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  margin-top: 130px;\n\n  // classes from the react-slick library\n  & .slick-prev:before {\n    content: '❮';\n  }\n\n  & .slick-next:before {\n    content: '❯';\n  }\n  & .slick-arrow {\n    top: 40%;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 58px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto';\n  font-weight: 600;\n  font-size: 48px;\n  line-height: 1.16;\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.16;\n\n  color: #ffffff;\n`;\n","import React, { FC } from 'react';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport slugify from 'slugify';\n\nimport { Container } from '@mui/material';\n\nimport ItemMovie from 'components/ItemMovie/ItemMovie.tsx';\nimport { Section, Wrapper, Title, LinkStyled } from './BoxMovie.style';\n\ninterface BoxMovieProps {\n  title: string;\n  path: string;\n}\n\n// settings for react-slick\nconst settings = {\n  dots: true,\n  infinite: false,\n  speed: 500,\n  slidesToScroll: 1,\n  slidesToShow: 5,\n  swipeToSlide: true,\n};\n//make slug for pathname\nconst makeSlug = (string: string) => slugify(string, { lower: true });\n\nconst BoxMovie: FC<BoxMovieProps> = ({ movies, title, path }) => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <Title>{title}</Title>\n          {path && <LinkStyled to={path}>View all</LinkStyled>}\n        </Wrapper>\n        <Slider {...settings}>\n          {movies &&\n            movies?.data?.results.map(movie => (\n              <div key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/all/${makeSlug(\n                      movie.original_title || movie.original_name\n                    )}-${movie.id}`,\n                  }}\n                >\n                  <ItemMovie\n                    src={movie.poster_path}\n                    date={movie.release_date || movie.first_air_date}\n                    name={movie.original_title || movie.original_name}\n                  />\n                </Link>\n              </div>\n            ))}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default BoxMovie;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  width: 200px;\n  height: 280px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n`;\n\nexport const Date = styled.span`\n  margin-top: 18px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n`;\n\nexport const Name = styled.span`\n  margin-top: 8px;\n\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n\n  color: #fff;\n`;\n","import React, { FC } from 'react';\n\nimport { Item, Poster, Date, Name } from './ItemMovie.style';\n\nimport noPoster from '../../assets/not-found-poster.png';\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n          width=\"100%\"\n          alt={name}\n        />\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  height: 600px;\n\n  background-color: #002;\n\n  & .slick-dots {\n    bottom: 35px;\n  }\n\n  & .slick-dots li button:before {\n    font-size: 10px;\n\n    color: #ccc;\n  }\n  & .slick-dots li.slick-active button:before {\n    color: #ff3b5f;\n  }\n`;\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  max-width: 1800px;\n  height: 100%;\n`;\n\nexport const Poster = styled.div`\n  height: 600px;\n\n  background-image: ${props =>\n    `url(https://image.tmdb.org/t/p/original${props.color})`};\n  background-size: cover;\n  background-position: center;\n`;\n","import React from 'react';\nimport Slider from 'react-slick';\n\nimport { useTrendingMovies } from 'api/hooks/useTrendingMovies.ts';\nimport { Section, Container, Poster } from './Hero.style';\n\n// settings for react-slick\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 900,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  arrows: false,\n  adaptiveHeight: true,\n  autoplay: true,\n  autoplaySpeed: 5000,\n};\n\nconst Hero = () => {\n  const { trendingMovies } = useTrendingMovies(1);\n\n  return (\n    <Section>\n      <Container>\n        <Slider {...settings}>\n          {trendingMovies &&\n            trendingMovies.data.results.slice(0, 3).map(movie => (\n              <div key={movie.id}>\n                <Poster color={movie.backdrop_path}></Poster>\n              </div>\n            ))}\n        </Slider>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Hero;\n","import React from 'react';\n\nimport { usePopularMovies } from 'api/hooks/usePopularMovies.ts';\nimport { useTrendingMovies } from 'api/hooks/useTrendingMovies.ts';\nimport { usePopularTv } from 'api/hooks/usePopularTv.ts';\nimport { useRatedMovies } from 'api/hooks/useRatedMovies.ts';\nimport { useUpcomingMovies } from 'api/hooks/useUpcomingMovies.ts';\n\nimport Hero from 'components/Hero';\nimport BoxMovie from 'components/BoxMovie';\n\nconst Home = () => {\n  const { popularMovies } = usePopularMovies();\n  const { trendingMovies } = useTrendingMovies(1);\n  const { popularTv } = usePopularTv();\n  const { ratedMovies } = useRatedMovies();\n  const { upcomingMovies } = useUpcomingMovies();\n\n  return (\n    <>\n      <Hero />\n      <BoxMovie\n        movies={trendingMovies}\n        title=\"Trending\"\n        path=\"movies/trending\"\n      />\n      <BoxMovie movies={popularMovies} title=\"Popular\" path=\"movies/popular\" />\n      <BoxMovie\n        movies={ratedMovies}\n        title=\"Top rated\"\n        path=\"movies/top_rated\"\n      />\n      <BoxMovie\n        movies={upcomingMovies}\n        title=\"Upcoming movies in theatres\"\n        path=\"movies/upcoming\"\n      />\n      {/* <BoxMovie movies={arr} title=\"Anime\" /> */}\n      <BoxMovie movies={popularTv} title=\"TV shows\" path=\"movies/\" />\n    </>\n  );\n};\n\nexport default Home;\n","import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getPopularTv } from 'api/services/movies.services.ts';\n\nexport const usePopularTv = () => {\n  const { data: popularTv } = useQuery('popular tv', getPopularTv, {\n    onError: (error: any) => {\n      toast.error(error.message);\n    },\n  });\n\n  return { popularTv };\n};\n"],"names":["usePopularMovies","page","useQuery","getPopularMovies","onError","error","toast","message","popularMovies","data","refetch","useRatedMovies","getRatedMovies","ratedMovies","useTrendingMovies","getTrendingMovies","trendingMovies","useUpcomingMovies","getUpcomingMovie","upcomingMovies","KEY","axios","params","api_key","getPopularTv","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Section","styled","Wrapper","Title","LinkStyled","Link","settings","dots","infinite","speed","slidesToScroll","slidesToShow","swipeToSlide","movies","title","path","Container","to","results","map","movie","pathname","string","original_title","original_name","slugify","lower","ItemMovie","src","poster_path","date","release_date","first_air_date","Item","Poster","Date","Name","noPoster","width","alt","props","color","arrows","adaptiveHeight","autoplay","autoplaySpeed","slice","backdrop_path","popularTv","BoxMovie"],"sourceRoot":""}