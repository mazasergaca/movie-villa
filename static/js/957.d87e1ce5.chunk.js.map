{"version":3,"file":"static/js/957.d87e1ce5.chunk.js","mappings":"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","sources":["api/hooks/useUpcomingMovies.ts","api/services/movies.services.ts","components/BoxPage/BoxPage.styles.js","components/BoxPage/BoxPage.tsx","components/ItemMovie/ItemMovie.styles.js","components/ItemMovie/ItemMovie.tsx","pages/UpcomingMovies/UpcomingMovies.tsx"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { toast } from 'react-toastify';\nimport { getUpcomingMovie } from 'api/services/movies.services.ts';\n\nexport const useUpcomingMovies = (page: number) => {\n  const { data: upcomingMovies, refetch } = useQuery(\n    'upcoming movies',\n    () => getUpcomingMovie(page),\n    {\n      onError: (error: any) => {\n        toast.error(error.message);\n      },\n    }\n  );\n\n  return { upcomingMovies, refetch };\n};\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 30px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 0;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 50px 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n\n  font-size: 30px;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Page = styled.p`\n  margin-bottom: 10px;\n  margin-left: 5px;\n\n  font-size: 14px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 15px;\n    margin-left: 10px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Item = styled.li`\n  @media screen and (max-width: 479px) {\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 3) {\n      margin-bottom: 20px;\n    }\n\n    width: calc((100% - 10px) / 2);\n  }\n\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n    width: calc((100% - 15px) / 3);\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 4) {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: calc((100% - 40px) / 4);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 5) {\n      margin-bottom: 20px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 40px) / 5);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 6) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const WrapperPagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport slugify from 'slugify';\nimport { Link } from 'react-router-dom';\nimport { Container } from '@mui/material';\n\nimport ItemMovie from 'components/ItemMovie';\nimport {\n  Wrapper,\n  Title,\n  Page,\n  List,\n  Item,\n  WrapperPagination,\n} from './BoxPage.styles';\n\n//make slug for pathname\nconst makeSlug = string => slugify(string, { lower: true });\n\nconst BoxPage = ({ title, movies, handleClick, page }) => {\n  return (\n    <Container>\n      <Wrapper>\n        {title && <Title>{title}</Title>}\n        <Page>\n          Page {page} of {movies?.data.total_pages}\n        </Page>\n        <List>\n          {movies?.data.results.map(movie => (\n            <Item key={movie.id}>\n              <Link\n                to={{\n                  pathname: `/movies/all/${makeSlug(\n                    movie.original_title || movie.original_name\n                  )}-${movie.id}`,\n                }}\n              >\n                <ItemMovie\n                  src={movie.poster_path}\n                  date={movie.release_date || movie.first_air_date}\n                  name={movie.original_title || movie.original_name}\n                />\n              </Link>\n            </Item>\n          ))}\n        </List>\n        <WrapperPagination>\n          <Pagination\n            count={movies?.data.total_pages}\n            size=\"small\"\n            variant=\"outlined\"\n            shape=\"rounded\"\n            color=\"secondary\"\n            onChange={e => handleClick(Number(e.target.textContent))}\n            page={page}\n          />\n        </WrapperPagination>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxPage;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n    height: 280px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 10px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Name = styled.span`\n  margin-top: 4px;\n\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 6px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\n\nimport noPoster from '../../assets/not-found-poster.png';\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n          width=\"100%\"\n          alt={name}\n        />\n        <Backdrop>\n          <AiFillEye size=\"34px\" />\n        </Backdrop>\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport { useUpcomingMovies } from 'api/hooks/useUpcomingMovies.ts';\nimport BoxPage from 'components/BoxPage';\n\nconst UpcomingMovies = () => {\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParam = new URLSearchParams(location.search).get('page');\n\n  const [page, setPage] = useState(Number(searchParam) || 1);\n\n  const { upcomingMovies, refetch } = useUpcomingMovies(page);\n\n  const handleClick = (page: number) => {\n    setPage(page);\n    navigation({ ...location, search: `page=${page}` });\n  };\n\n  useEffect(() => {\n    refetch();\n    window.scrollTo(0, 0);\n  }, [page, refetch]);\n\n  return (\n    <BoxPage\n      title=\"Upcoming movies\"\n      movies={upcomingMovies}\n      handleClick={handleClick}\n      page={page}\n    />\n  );\n};\n\nexport default UpcomingMovies;\n"],"names":["useUpcomingMovies","page","useQuery","getUpcomingMovie","onError","error","toast","message","upcomingMovies","data","refetch","KEY","axios","getTrendingMovies","params","api_key","getPopularMovies","getRatedMovies","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Wrapper","styled","Title","Page","List","Item","WrapperPagination","title","movies","handleClick","Container","total_pages","results","map","movie","to","pathname","string","original_title","original_name","slugify","lower","ItemMovie","src","poster_path","date","release_date","first_air_date","Pagination","count","size","variant","shape","color","onChange","e","Number","target","textContent","Poster","Backdrop","Date","Name","noPoster","width","alt","navigation","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","useState","setPage","useEffect","window","scrollTo","BoxPage"],"sourceRoot":""}