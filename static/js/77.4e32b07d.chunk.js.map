{"version":3,"file":"static/js/77.4e32b07d.chunk.js","mappings":"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","sources":["api/services/movies-services.ts","components/BoxPage/BoxPage.styles.ts","components/BoxPage/index.tsx","components/ItemMovie/ItemMovie.styles.ts","components/ItemMovie/index.tsx","pages/Movies/Movies.styles.ts","pages/Movies/index.tsx","api/hooks/useMoviesByName.ts","services/make-slug.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\naxios.defaults.baseURL = API_URL;\n\nexport const getTrendingMovies = async (page: number) => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getPopularMovies = async (page: number) => {\n  return await axios('/movie/popular', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getRatedMovies = async (page: number) => {\n  return await axios('/movie/top_rated', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getUpcomingMovie = async (page: number) => {\n  return await axios('/movie/upcoming', {\n    params: {\n      api_key: KEY,\n      page,\n    },\n  });\n};\n\nexport const getMoviesByName = async (name: string, page: number) => {\n  return await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      query: name,\n      page,\n    },\n  });\n};\n\nexport const getMovieById = async (id: string) => {\n  return await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieVideoById = async (id: string) => {\n  return await axios(`/movie/${id}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieSimilar = async (id: string) => {\n  return await axios(`/movie/${id}/similar`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getMovieCast = async (id: string) => {\n  return await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonDetails = async (id: string) => {\n  return await axios(`/person/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonMovies = async (id: string) => {\n  return await axios(`/person/${id}/movie_credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getPersonImages = async (id: string) => {\n  return await axios(`/person/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getReviewsMovie = async (id: string) => {\n  return await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n\nexport const getImagesMovie = async (id: string) => {\n  return await axios(`/movie/${id}/images`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 30px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 0;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 50px 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n\n  font-size: 30px;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Page = styled.p`\n  margin-bottom: 10px;\n  margin-left: 5px;\n\n  font-size: 14px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 15px;\n    margin-left: 10px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Item = styled.li`\n  @media screen and (max-width: 479px) {\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 3) {\n      margin-bottom: 20px;\n    }\n\n    width: calc((100% - 10px) / 2);\n  }\n\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n    width: calc((100% - 15px) / 3);\n    &:not(:nth-child(3n)) {\n      margin-right: 5px;\n    }\n\n    &:nth-last-child(n + 4) {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: calc((100% - 40px) / 4);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 5) {\n      margin-bottom: 20px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 40px) / 5);\n    &:not(:nth-child(5n)) {\n      margin-right: 10px;\n    }\n\n    &:nth-last-child(n + 6) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const WrapperPagination = styled.div`\n  display: flex;\n  justify-content: center;\n\n  & button {\n    color: #fff;\n  }\n`;\n\nexport const ButtonPagination = styled.button``;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@mui/material/Pagination';\nimport PaginationItem from '@mui/material/PaginationItem';\nimport { Container } from '@mui/material';\n\nimport { makeSlug } from '../../services/make-slug';\nimport ItemMovie from '../ItemMovie';\nimport {\n  Wrapper,\n  Title,\n  Page,\n  List,\n  Item,\n  WrapperPagination,\n  ButtonPagination,\n} from './BoxPage.styles';\n\ninterface BoxPageProps {\n  title?: string;\n  movies: any;\n  handleClick: (numberPage: number) => void;\n  page: number;\n}\n\ninterface ItemI {\n  id: number;\n  original_title: string;\n  original_name: string;\n  poster_path: string;\n  release_date: string;\n  first_air_date: string;\n}\n\nconst BoxPage: FC<BoxPageProps> = ({ title, movies, handleClick, page }) => {\n  return (\n    <Container>\n      <Wrapper>\n        {title && <Title>{title}</Title>}\n        <Page>\n          Page {page} of {movies?.data.total_pages}\n        </Page>\n        <List>\n          {movies?.data.results.map(\n            ({\n              id,\n              original_title,\n              original_name,\n              poster_path,\n              release_date,\n              first_air_date,\n            }: ItemI) => (\n              <Item key={id}>\n                <Link\n                  to={{\n                    pathname: `/movies/all/${makeSlug(\n                      original_title || original_name\n                    )}-${id}`,\n                  }}\n                >\n                  <ItemMovie\n                    src={poster_path}\n                    date={release_date || first_air_date}\n                    name={original_title || original_name}\n                  />\n                </Link>\n              </Item>\n            )\n          )}\n        </List>\n        <WrapperPagination>\n          <Pagination\n            count={movies?.data.total_pages}\n            size=\"small\"\n            variant=\"outlined\"\n            shape=\"rounded\"\n            color=\"secondary\"\n            renderItem={(item: any) => (\n              <PaginationItem\n                component={ButtonPagination}\n                {...item}\n                onClick={() => handleClick(item.page)}\n              />\n            )}\n            page={page}\n          />\n        </WrapperPagination>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoxPage;\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Poster = styled.div`\n  position: relative;\n  width: 120px;\n  height: 180px;\n\n  overflow: hidden;\n\n  border-radius: 10px;\n  background-color: #111;\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n    height: 280px;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: transparent;\n  backdrop-filter: blur(0px);\n  transition: backdrop-filter 250ms, color 250ms;\n\n  &:hover {\n    backdrop-filter: blur(4px);\n    color: #fff;\n  }\n`;\n\nexport const Date = styled.span`\n  margin-top: 10px;\n\n  font-weight: 700;\n\n  color: #9ca3af;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Name = styled.span`\n  margin-top: 4px;\n\n  font-weight: 700;\n  font-size: 14px;\n  text-align: center;\n\n  color: #fff;\n  transition: color 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 6px;\n    font-size: 16px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 18px;\n  }\n`;\n","import React, { FC } from 'react';\nimport { AiFillEye } from 'react-icons/ai';\n\nimport { Item, Poster, Date, Name, Backdrop } from './ItemMovie.styles';\nimport noPoster from '../../assets/not-found-poster.png';\n\ninterface ItemMovieProps {\n  src: string;\n  date: string;\n  name: string;\n}\n\nconst ItemMovie: FC<ItemMovieProps> = ({ src, date, name }) => {\n  return (\n    <Item>\n      <Poster>\n        <img\n          src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n          width=\"100%\"\n          alt={name}\n        />\n        <Backdrop>\n          <AiFillEye size=\"34px\" />\n        </Backdrop>\n      </Poster>\n      <Date>{date}</Date>\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default ItemMovie;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-top: 40px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Form = styled.form`\n  margin: 0 100px 0 0;\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n    margin: 0 auto 20px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n\n  &::after {\n    position: absolute;\n    top: 100%;\n    content: '';\n    display: block;\n    height: 1px;\n    width: 110%;\n\n    background-color: #fff;\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n\n  border: none;\n  outline: none;\n  color: #fff;\n  background-color: transparent;\n\n  &::placeholder {\n    color: #ccc;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 22px;\n\n  border: none;\n  color: #fff;\n  background-color: transparent;\n  cursor: pointer;\n  transform: scale(1);\n  transition: color 250ms, transform 250ms;\n\n  &:hover {\n    color: #ff3b5f;\n    transform: scale(1.1);\n  }\n`;\nexport const WrapperInfo = styled.div`\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 18px;\n\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  margin: -5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  margin: 5px;\n\n  width: calc((100% - 50px) / 5);\n`;\n","import React, { useState, useEffect, ChangeEvent, FormEvent, FC } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useMoviesByName } from 'api/hooks/useMoviesByName';\nimport { Container } from '@mui/material';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nimport BoxPage from 'components/BoxPage';\nimport {\n  Section,\n  Wrapper,\n  Form,\n  Label,\n  Input,\n  Button,\n  InfoText,\n  WrapperInfo,\n} from './Movies.styles';\n\nconst Movie: FC = () => {\n  const navigation = useNavigate();\n  const location = useLocation();\n\n  const searchParam = new URLSearchParams(location.search).get('query');\n  const searchParamPage = new URLSearchParams(location.search).get('page');\n\n  const [value, setValue] = useState(searchParam || '');\n  const [page, setPage] = useState(Number(searchParamPage) || 1);\n\n  const { moviesByName, refetch } = useMoviesByName(value, page);\n\n  useEffect(() => {\n    if (searchParam) {\n      setValue(searchParam);\n      refetch();\n      window.scrollTo(0, 0);\n    }\n  }, [searchParam, refetch, page]);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setValue(e.target.value);\n  };\n\n  const handleClick = (page: number): void => {\n    setPage(page);\n    navigation({ ...location, search: `query=${value}&page=${page}` });\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    if (!value) {\n      toast.info('Please input text');\n      return;\n    }\n    setPage(1);\n    navigation({ ...location, search: `query=${value}&page=1` });\n    refetch();\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <Input\n                placeholder=\"Search movies\"\n                value={value}\n                onChange={handleChange}\n              />\n            </Label>\n            <Button type=\"submit\">\n              <AiOutlineSearch />\n            </Button>\n          </Form>\n          <InfoText>\n            {moviesByName?.data.total_results}{' '}\n            {moviesByName?.data.total_results > 1 ? 'movies' : 'movie'} found\n            for your query\n          </InfoText>\n        </Wrapper>\n        {moviesByName?.data.total_results > 0 ? (\n          <>\n            <BoxPage\n              movies={moviesByName}\n              page={page}\n              handleClick={handleClick}\n            />\n          </>\n        ) : (\n          <WrapperInfo>\n            <InfoText>Enter movie name</InfoText>\n          </WrapperInfo>\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Movie;\n","import { useQuery } from 'react-query';\nimport { getMoviesByName } from '../services/movies-services';\n\nexport const useMoviesByName = (name: string, page: number) => {\n  const { data: moviesByName, refetch } = useQuery('movies by name', () =>\n    getMoviesByName(name, page)\n  );\n\n  return { moviesByName, refetch };\n};\n","import slugify from 'slugify';\n\nexport const makeSlug = (string: string) => slugify(string, { lower: true });\n"],"names":["KEY","axios","getTrendingMovies","page","params","api_key","getPopularMovies","getRatedMovies","getUpcomingMovie","getMoviesByName","name","query","getMovieById","id","getMovieVideoById","getMovieSimilar","getMovieCast","getPersonDetails","getPersonMovies","getPersonImages","getReviewsMovie","getImagesMovie","Wrapper","styled","Title","Page","List","Item","WrapperPagination","ButtonPagination","title","movies","handleClick","Container","data","total_pages","results","map","original_title","original_name","poster_path","release_date","first_air_date","to","pathname","makeSlug","ItemMovie","src","date","Pagination","count","size","variant","shape","color","renderItem","item","PaginationItem","component","onClick","Poster","Backdrop","Date","Name","noPoster","width","alt","Section","Form","Label","Input","Button","WrapperInfo","InfoText","navigation","useNavigate","location","useLocation","searchParam","URLSearchParams","search","get","searchParamPage","useState","value","setValue","Number","setPage","useQuery","moviesByName","refetch","useMoviesByName","useEffect","window","scrollTo","onSubmit","e","preventDefault","toast","placeholder","onChange","target","type","total_results","BoxPage","string","slugify","lower"],"sourceRoot":""}